{"Timestamp":1655113201,"Time":"2022-06-13T09:40:01","Flag":0,"Tips":"Version 6.0 is available in Official Website!","TipsDetail":"Version 6.0 is available in Official Website!\n\nGoogle Play will be a few days later!\n\nSeagull is back!!!","Urgency":"","DownloadUrl":"https://seagullmainstor.blob.core.windows.net/public/tool.seagull.v-v6.0.2-602-universal-release.apk","LatestVersion":600,"Apis":[],"Data":"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","Source":0,"PublishVersion":920}