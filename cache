{"Timestamp":1613605201,"Time":"2021-02-17T23:40:01","Flag":0,"Tips":"Please upgrade to the latest version ASAP","TipsDetail":"Please upgrade to the latest version ASAP.\n\nOnly provide several nodes for this version.\n\nHow to upgrade: you can use Google Play or visit our offical website（About->Official Website） through Google Play page to download APK file","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":510,"Apis":["http://3.106.134.198:7100/api/main","https://213c59dc048e.blob.core.windows.net/node/cache","https://asia-east2-service-305111.cloudfunctions.net/nodeapi"],"Data":"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","Source":0,"PublishVersion":920}  