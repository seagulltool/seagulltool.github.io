{"Timestamp":1646236801,"Time":"2022-03-02T16:00:01","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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t3tkGxtxSL9xtx6mjSxxHRtFD360jnk6RoO2NSh1uSv22SX2NSw2SSs3xSt2ISw4wSd22Sd5xS62jSwlHHHxxWtktb3zEMtxuxjmRSax3RjDw1deGVjkuyibNLjouHixDViiuRi6Nbihu2ihjzikuLixtyihuzihwMtoSyjmRRtYtb3kEytxucvhvndYDRw6Ry54wy64DH0n2StjtIG0vx6xDLj0yV1z2ytxtLUowIF1vxCyFbJxtRtF33BxNxtRxaujtJ1KEzk5Hxtxu2v1Rc0nHHt6tz3FExfxE2j0jH16ua0ku36kNxUxjLdxyxtmuogxxRUFN3h0unk6Iod2vSd3uSt2HSg4vSd22Sd5xS62NSelRSt2DSkmHSx2uSgnRHax1WZkNbtzEMjxtxtmIovxxRgDS1teDV2kky2bOL1okH2xOV0ikR26Obkhk22hOzjkkL2xOyihkz2hkM6ojy0m3RBYNbtkEyjxtcthHntYtRf62yw43yt4uH5mIyOjNIt3GxtxuL50SVfz3yOxNLtovIH1wxKyubExvR6Fj3kxwxdOtTxhH023uKe5Ixsxt2t12cznIHY6NztFExjxD210uH26uafkk3tkuxBxvL7xDxtmtotxxRfFv3d0unt63os22St4tS62NSs5RSt2DSklHSx2uShmHSF2NSwnSSs2xStoHHvxxWgkvbdzjM4xux6mtowxHR2Dx1BeNVokuy0bELdouH0xEVdiuR06Ebdhu20hEzdkuL0xEydhuz0hEMmouykmyRgYwbdkjy4xuc6hNnUYNRt6Hyzovy6mDx0m2RtntyExwR6CDMjdy21x2xtwtMUiFyG2vLCbwxOhtato3nB6Nat6xSuOt01JE0kxHRtSu3vjRW05HytxtakxERfSuM45EyfxEVtguLBxvR7YDRt6tytnxHfhvadkucto3ysq2It0No6hNIs0RothDIk0HoxhuIh0HoFhNIw0SoshxIt0HovsxRgFvbd2DLjatxt6IyvnxHghSztkDb0zEL1xObkwEW1aORjJEL1lOyibEL1oOHhxEV1wOR56ER1xk26wj30x3yBhNztjubtxuxvxvHd7tzgFxygxvI6jDI002yt3tHNmvI6xDRjCyM1d22txtxEwQMJiFyF2wLJbtxth3aBoNnt6xauIt11SE3kjHWtxuRvSR30jHWt5tyixu1ixuRfSEMf5uy6xN2UkjLdxyRtYuRg6xyU5NnhhuakkIcdovydquIt0HyghvId02ydhxI60NyehRIt0DykhHIx0uyghRIa01yZsNRtFEbt2uLjaRxa63yj5wndhGzkkubizNLkxubiwjWkauRiJtLkluyibDLkouHixNVkwuRi6wRtxS2jwR3txtyhhuz6jNbUxNxtx2Hv72zXFtytxSnaovRdmtoSjtyt1yx0xHLg0vVdzDyOx1LgowIB1Ixtyub3xSRtFt3tx2xeNE3jKjMwnx165NxgxR2w1vcdnNHi6tz2Htx3xu210uH66NaUaj3dhyxtxuLgxxxUnNShxuRkFI3d0vnd6uot2HSg4vSd22Sd5xS62NSelRSt2DSkmHSx2uSgnRSa21SZoNHtxOWiktbtzIMvxxxgnSStxDRkDO12eOVjkOy2bOLioOH2xOVhiOR26Ob5hO22hOz4kOL2xky6hjz0h3MBoNytmORiYtbtkHytxtckhxnsYwR66Dy0o2ytntHDnvo6jDIjoyx1x2Lt0tV5z1yjxILGo3IJ1txty3bBxNRtFx3uxtx1OEaknHLtSuTvYRx0xH2t1tc4nEHf6OafWOxixD2k0tHt6GxthSz9zty6xjIxoHxtxNV6njWkxRaOmNyhouRvm2yXoNHwmSysoxxtmIywowndm2ydoxR6mjywoHKHhxatnt33euVtnuyjxRIao3xjxwbdLwLkauni6Dbkhu2ihNakauMixjbkwuWiatRkBu2izDykmuRiSwVtoSnj6RHtxtL3bunt6uxv9vWdxNKjxyxcmHRjmvS6jDy022yt0tnQhvz6aDVjkyR162btatngnvINi32Fx0xlxtWt33yBxNctNxauYtK1REHkhHztkuLv0Rc0xHxtItn3huzfeuW3xuxkxtRtYGRt6Sy90tn6hjaxkHctoNy6qjIk0RIOhNIi0uIvh2IX0NIwhSIs0xythIIw0wydh2Id0xy6sjRwFHbH2xLtatxi6uyt0unjhRzak3bjzwLdxGbkwuWiaNRkJuLiljykbuLiotHkxuViwDRk6uRixN2kwu3ixwythSzjjRbtxtxixuHt7uzvFvydxNIsjxy012yYltxtmSoaxvRdCDMOdt2txyx0wHMgivyd2DLOb1xghwaBoInt6uz36SKtptKtG2zexERjSj3wjxW65NygxR0wxvRdSDMi5uy2xExfxOLixDxkmtotxGRtFS390tn66jox2HStnNS62jSkoRSO2NSj0uSv22SX1NSw2SSs2xSt2ISw3wHdx2Wdkxb6zjMwxHxHmxotxtR0DE1teuVjkRyab3LjowHdxGVkiuRi6Nbkhu2ihjzkkuLixtykhuzihDMkouyimNRkYubikwytxScjhRntYtR06Eytouyv1vRd1NHsnxy0x2RYCtMtdS2axvxdwDMOityt2yL0bHxghvadoDnO61agYw1BOIJtGuM3xSRtSt3tj2We5Eyjxj0wxxR6SNMg5RywxvxdxNLjxuxhnuyfxERfFu360NnU6jod2ySt5uSg2xSUlNSh2uSkmISd2vSdnuSt2HSgovSd22Sd0xH6xNWekRbtzDMkxHxxnuygxRRaD11ZeNVtkEytbuLjoRHax3VjiwRd6wbkhu2ihDzkkuLixNykhuzihjMkouyimtRkYubikDykxucihwntYSRj6RytjtI1ouy6mNyUxNRtCHMwdS2fxHxtwuM5iIyO2NLtb0xthua5oSnf63zO6N1tNx3fiFMOx1RESw36jjWk5wydxtaxxHR2SuMe5IysxtVtg2LzxIRYYNRt6EyfxORjFt350jnt6uoB2vo74wSt23oa5FSv2xotltSj2Oo3mOS22uo0nNS32koioEH5xOWjkEb1zkMexHxh0NxhxHbsLxL6aNnU6Hbfh02uhRaOaRM1xvbdwDW1aOR5BE2jzuyglkR4SEVioEn56ux1xEL1bEnt6Sxe9SWsxDKuxtxtoHRvnvIaj2SvjRIjx2RwCwMddR21xxxtwHMvivyU22Lwb2xvhRajo2nw6wzd6tKipEKhGEz1xERgSk34jEWi5Ey5xuK1xER1SEMt5SyexS3saD2ujtxtxHLvxFxy1HHzhRaQkRc1ovydqDI50EykhOIh0uyghkI40EyihEI50uy1hEI10EythSIe0SyssDRuFtbt2HLvaPxg62ydmHxRxNbtLOL3aknj6Obhhk2hhOakaEM1xEb4wEW5aER3Bt21zIyhlIReS2Vtounv6PxMx3Lwbxng6Pxd9yWtxNKdxyx6oNHUmHy0jHIdn2yj1xxfxxLt0tV1zky1xuLjouI01Nx3ykbixER5FO3jxEx1SkaeGHzhKNJhYHxsxx261NcUnHHw63adISxQxI2f0HHN6NztnEL3kux1hOz5zkyhxOykxER1FE340En56Eo32tS1nISh2ISeo2St2uSv0PSM2HSg1vSw2xSs2vSd2jSh3OHhxOW5kEb+zkM4xExi2EH5huz1kEb1zELtxSbewSWsaDRuJtLtlHy0bHLgo2HMxNV4wuR06HRax02uwR3OxIyYhNz4jubBxvx0x3Hw7HzFFHygxPIujxIfj2odjHIR2NxhxuLt0IVgzHyaxQLsoRI01Hxfy2bOxRR1Fv3dxOx5Ou1vmH1gjP0y5RxvxP2j12cwn1Hf62aOINxhxO260NHf63aNe3bXeHbvwIx3xxLkxHxgmvydxOR0Fu3v0Hng6Poy2RSkoHSg2vSd0OSk2uSv1HSg20Sg20Sf22SO3NS12uS54SHwxQWMkHbgzPMsxvxdmOyhxuRtDH1heEVjkRyvbHLZoyHax2VtiNR16ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920}  