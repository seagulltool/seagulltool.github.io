{"Timestamp":1656352801,"Time":"2022-06-27T18:00:01","Flag":0,"Tips":"Version 6.0 is available in Official Website!","TipsDetail":"Version 6.0 is available in Official Website!\n\nGoogle Play will be a few days later!\n\nSeagull is back!!!","Urgency":"","DownloadUrl":"https://github.com/seagulltool/seagulltool.github.io/releases/download/v6.0.3/sg-v6.0.3-603-universal-release.apk","LatestVersion":600,"Apis":[],"Data":"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","Source":0,"PublishVersion":920} 