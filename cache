{"Timestamp":1650650401,"Time":"2022-04-22T18:00:01","Flag":0,"Tips":"Tips","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"puU1XXednXXOZqXYXALdTXXCDNUCnXTPYDLFWNUmXXeJnrXUZOPXXrhKBK9lmOYmKNGeFXGKYOLOEqTYZAFTXCLXTD1XpOiaJsCYKJUloMUTTCzXWAUTmCwXnAiToCUXoA5PTCzXXALPTCYXlA5PDCwXlLUXor5YTqzYXALTTCYXlD5FFHGlJXU9BOCYmIodmXGGKpTYZALBWKUdmXwYnsUKoqQYKAQdDLwNlHUYoL5CTXzXXsLQTXKXmNiCmA5JKBYBEO9YKDCFmqGGoOBYZATTWCU4oBiTBA9vmBGFoCidJXCalX1mmuGXGDw8TOzaWXUXJDsBmrwmlFilmBwXTOz9WIUlJOYmoN5eDXB1ZOUYJA1CnqLOnDG8WOnaYKv5XXrXZCFXXDXXYOMaZsXYZJJlYMPTYCTXTAUPmC5XnAsPmCGXKAwPTCzXJAPPJCMXWAMPJC0XYLFXYrTYZqvYXAPrZDndWXvaZXTXXqPsXOJ9WXUXJt5aKFUlpXMKmXUXBtCGKqT9TFYlWXQYnq1aoFTlYtFYZDFrZrvYYAPXXOr1XC8XXABKXNndYXT9TphKBIQlmXGzFAGvKBYrBBCXKCTdmXGamXhmCuGXmDY8mO5aJXCXKDwBTrzmJFPlJBMXWOM9JI0lYOFmYNTeZXv1XOPYZAnCWqJOYDX8YOJaXKX5WXUXoCiTFXiXorQGDpB9ZrUYJA1GnBLXnBGBWBnXYBvXXBrXZBFTXBXXYBLPXBPXYBLzXBJXXBTeTXKGmriQpXYXJC5TKXQXDOBYZAUXJD1znsLCnXGXWGnYYDvzXrr5ZsFCXXXXYKLOYrrYXBnaYLLdYXTCTJUloXQOKNGNBCs0JreUmXQXDOBwZs51mXhXTCUToAQBKBGXBB94mBQXDDBPZHUhJA1YnXLXnqG5WHnlYBvXXrrUZqFYXAXdYXLUXqvYZAPCYqLOZDTPTqKGmXiJlrGUlOwXBqCGKpT9TIYlWXQNnB1doXTKYOFOZqFQZXv0YBPNXBrlXB8NXBXlZBXNXBTlTBhNEB9lKDiNnBBlZDeNTBwhTDzBXs49YJ4lZXFNXBPdTXhaEXGXlq9iTqzYJDGzWsTCYX1XKJTYWDUznrn5ZsUCDXoXHqaKYFswTqhGBF9dmXCCpJTlTXYOTNhNBCw0prTUTX1XmOCwKsQ1TXhXDCBTZATBXBrTWBU4mBUXnDTPHHThYAnYWXTXYqn5WHTlYBnXWrTUYqnYWATdYXnUWqTYYAnCIqhOFDUPoqwGKXTJZrTUXOrXWqUGmpK9KIGlTXaTJXiXKrhGGpG9nrTYKAQUnBFXTBiPJBBXZBLzTBYXJBYvTBzXWBUrmBKXTBzNTB0XpBUeFXTGTrXQWXPXXB4XXDnFXHvlTXhaEpGGlX9XTtzaJFGlWXTeYX1XKtTGWqU9nFnlZXUYFqTCHLYPFJwYTDhrBr9YmACXpOT1TCYXTAhKBNwdpXT9Tp1KmIClKXQTTAhJDBBFZDT4ZBFXWDUPmHUhnATYHXTXYqn5WHTlYBnXWrTUYqnYWATdYXnUWqTYYAnCWqTOYDnPIqhGFXUJorwUKOTXZqTGZpF9WIUlmXKrKBGdTXaKJOiOKqhQGXG0nCTJKBQlnCFJTBilJCBJZBLlTCYJJBYlTBzJWBUlmBKJTBzhTD0BpsU9FJTlTXXrWBPdXX4aXXnXXqPsTOh9EXGXlt9aTFzlJXGKWXTXYt1GKqT9WFUlnXnwZCUepLhsBHwYmDUrTrhYBA9XmOC1pCTXTAYKTNhdBXw9ppTKTI1lmXCrKBQPTChJDDBJZBTdXXLaWXUmmuUXnDT8HOTaYXLTWDTBYrLmWFTlYBLXWOT9YILlWOTmYNLeWXT1YOPYIAhCFqUOoDw8KOTaZKT5XXLXWBUTmXKXKrGGTpa9JriYKAhaGBGXnBTvKBQXnBFrTBiXJBBNZBLXTBYJJBYXTBzFWBUXmBKeTXzGTr0QpXUXFBTTTXPXWOPYZA44XqXKYrLYWDUzKsCCmXBXZJUYKDXzXrF5WsYCJXTXTHMUoGTCTqaeCFKdpXLCHJBlWXUOmNGNoCU0TrzUCXFXWOUwlsC1TXzXCBUTmAezoBUXTBh4DCBXZDTPXHThTAMYnXCXTqa5XHTlYBTXXrTUYqXYXATdYXBUXqTYYAFCXqTOYDJPXqTGYXoJWrUUnO9XlqCGnpT9TIFlTXhFEB9dlXCKmOTOKqQQnXF0TCCJmBLlZCKJmBYlWCUJmBQlTCzJWBUlmBQJnBTlXBhJDB5hmDTBTsU9WJdlDXLFZBTdWXnaWXPXZNP5WpUYKpCYmDBzZsUCKXXXXJFYWDYzJrT5TsMCoXTXTKaKCJKapKLaHLBdWXUCmJGloXUOTNzNCCF0WrUUlXCXTOzwCsU1mXeXoBUTTAhBDABvZATXXDTPTHMhnACYTXaXXqT5YHTlXBTXYrXUXqTYYABdXXTUYqFYXATCYqJOXDTPYqoGWXUJnr9UlOCXnqTGTpv9TIhlEX9PlBCdmXTKKOQOnqFQTXC0mBLNZBKlmBYNWBUlmBQNTBzlWBUNmBQlnDTNXBhlDD5NmBThTDUBWsd9DJLlZXTPYB4dZXLaXXrXXXTXTthaEFGllX9CTXzXJtGGWqT9YF1lKXTYWKU9nLnYZKUYGDUrHr9YGAUXTOh1BC9XmACKpNTdTXK9TphKBIwlpXTPTBMznCwzTBh4DBBXZDTPXHPhWAUYmXUXnqT5HHTlYBPXWrTUYqPYWATdYXTUWqTYYATCWqTOYDTPWqTGYXTJIrhUFOUXoqwGKpT9ZITlXXPrWXUXmrKGKpG9TraYJAiOKChXGBGJnCTXKBQFnCFXTBiBJCBXZBLXTCYXJBYTTCzXWBUemXKGTrzQTX0XpCUXFDTFTHPlWXTKYq4CXX4XXtvaWFUlKXCimXBXZtUGKqX9XFFlWXYaJBTeTFMwotTYTDsrErUYGAaXBOv1WCUXmAGKoNUdTXz9CpTKWIUllXCrTAzrFBQvlCXXWCUdKXTaTXTmZuTXTDM8nOCaTXaTXDTBZrJmXFTlZDnXXOT9ZIrlXOTmZNveXXT1XOLYXATCXqQOWDU8nO9alKC5nXTXTBTXZDTXTO5aGswYKJ8lZMKTmBYXWAUTKB1XTAaTJBiXKAhTEB9XKATTXBhXBAiTnBXXZLLXTrwYKq8YZATTqDidTXwaTXzXXqF9XOXYWDXzWsTCYXTXTJ1YoDszKrT5TsQCnX0XYKJCJFKaTqhQFLYdTXzCBJalmXwOCNGNDCT0TrYUoX5XnOvwZsU1FXTXTBY4oDvXZAUFJBUvnCTXTDwPTHzhXAFYTXhXFq95oHXlZBdXXrJUZqhYXAJdZXhUXqJYXAhCXqJOXDhPXqJGXXhJXrJUXO0XTqMGmpK9KIGlTXzJXBFdTXhKEO9OlqCQmXT0KBQNnBFlTBCNmBLlZBKNmBYlWDUNmBQlTDzNWBUlmCQNnBThXDhBDs59mJTlTXUJWBddDXLaZXTXWqPiWqTYZD4zXsJCWXUXKJCYmDBzZrU5KsXCXXFXWHYQJGTaTBMeoFTdTXsCEJUlGXaOBNvNWCU0mrGUoXUXTOzwCsT1WXUXlCCXTAzFEB9BKD94TDhXDDBPZHThXAJYWXUXmqU5nHTlHBTXYrvUWqTYYAvdWXTUYqvYWATCYqvOWDTPYqLGWXTJYrLUIOhXFqUGopw9KITlZXTrXBJdWXUKmOKOKqGQTXa0JCiNKBhlGBGNnBTlKBQNnBFlTBiNJBBlZBLNTBYlJDYNTBzhWDUBmsK9TJzlTX0rpBUdFXTaTXPXWqBiWqPYXD4zYsLCWXUXKJCYmDBzZrU5KsXCXXFXWJY1JrTaTBMQoLTdTXaCHJGlDX9OHNXNWCU0mrGUoXUXTOzwCsT1WXUXlCCTTAzvEB9JKB94TBhXDDBPZHThYALYWXUXmqU5nHTlHBTXYrnUWqTYYAndWXTUYqnYWATCYqnOWDTPYqnGWXTJYrnUIOhXFqUGopw9KITlZXTFYBLdWXUKmOKOKqGQTXa0JCiNKBhlGBGNnBTlKBQNnBFlTBiNJBBlZBLNTBYlJDYNTBzhWDUBmsK9TJzlTX0FpBUdFXTaTXFXWqPiYq4YYD4zYsTCTX1XoJsYKDTzTrQ5ns0CYXJXJKKOTrhYFBYaTLzdHXCCYJwlHXCOFNTNTCY0or5UnXvXZOUwFsT1TXYXoBvTZAUXnAGTmB4BWXUXKJTYTtB0TXhdFX9OoqXYZAddXXFCYNhCXXFPYDhFXNFmYXhJXrFUYOhXXrFKZKhlXOFmZN0eTXMKmOKOKqGYTAzzYDJdWXUKmOKOKqGQTXa0JDiJKBhlGDGJnBTlKCQJnBFlTCiJJBBlZCLJTBYlJCYJTBzhWDUBmsK9TJzlTX0zpXUXFOTYTAX8WtT9ZK4dYXLGZpPYWAUPKHCdmXBYZsUKKqXYXAFBWLYvJqTGTLMeoXTXTsYQBXiXmNYCBA8JWBUBmOGYoDUFTqzGGOXYWAUzlDCJTDz4GBwXKAwJlXPXWJUYKtT0TXvdTXhOFq9YoAXdZXdCXNJCZXhTXDJFZNhmXXJJXrhUXOJXXrhKXKJlXOhmXNJeXX0KTOMOmqKYKAGBTDzdZXPKWOUOmqKQKXG0TBaNJBilKBhNGBGlnBTNKBQlnBFNTBilJDBNZBPlTDYNJBYhTDzBWsU9mJKlTXzzTX0XpOUYFAT8TtX9XKBdWXPGYp4YYATPTH1doXsYKsTKTqQYnA08YFJCJqKmTFhCFXYXTszQBXYXmNvCHAiJDBTBTOYYoD5FnqvGZOUYFATBTDYvoCvPZBU4lBwXTDhPDHBhZATYYXTXTqM5nHClTBaXXrTUXqTYXATdXXXUXqTYXABCXqTOXDFPXqTGXXJJXrTUXOoXWqUGnp99lIClnXTFTXvXTrhGEp99lrCYmATaKDQXnBFvTDCXmBLrZDKXmBYNWDUXmBQJTDzXWBUFmDQXnBTeXXhGDr5QmXTXTDUXWDdFDHLlZXTKYq4aYJTdXXXGYprYWAUJKFCdmXBYZsUKKqXYXAFBWLYvJqTGTLMeoXT6jakJwSdOt1x0HU2xuReSI3sjtWt52yzxIKYxNRtSOMf5uyfxE3jzNb15txtxGLtxSx90tR6hjaxkHctoNy6qjyk1RIOhNyh1uIvh2yX1NIwhSys1xIthIyw1wIdh2yd1xI6sjRwFHbH2xLtatx16uy64txwxHb2LxLBaNno6Ob2hu2dhOa2auMdxOb2wuWdaOR2Bu2dzOy2luRdSOV2ounm6uHkxyLgbwnd6Dx59tWtxHKtxtxgmRnAntotjSoajvIdxjRGCtMtdy20xHxgwvMdityJ2RLhbwxRh1atoun36SztJtbtN20eKEbjxjRwSx36jNWg5RywxvadxDR5SjM55uyhxEVfguL6xNRUYjRd6yytouxgxxVUnNWhxuaknIydmvRdnuytmHHgnvydn2Rdnxy6nNHenRytnDxknHyxnu1ghRaan13ZeNVtnEytxuIjxRRaD31jewVdk1yjbuLjotHjxuVjiDRj6ubjhN2jhuzjkDLixuyjhNzihuMjowytmSRjYRbtktyixuc6hNnUYNRt6Hyf02yj1xRtmuI5jIIOxNRtCGMtdu25xSxfw3MOiNyt2xLGb0xJhxaFovn66jakJwSdOt1x0HU2xuReSI3sjtWt52yzxIaYxNRtSEMf5EyjxNVkguL0xuR6YNRU6jyd5yxtxuVgnxWUxNahnuyk5IRdnvyd5uHtnHyg5vxdn2yd5xn6nNye5RRtnDyk5HKxhuagnR3ae1VZnNytxOItxuRjDR1ae3VjkwydbGL5ouHjxNV5iuRj6jb5hu2jhtz5kuLjxDy5huzjhNM5ouyjmwRtYSbjkRytxtc2hun6YNRU6Nytj2IyoxyAltyt0SHahvzdajVGktRt6yb0aHngnvIdij2JxOxgxQWJ3wytxuJ3jSztYt1tO2RehEzjkjLw0xc6xNxgZRRwhvzdetW0xDx0JD245un0huz6zNyUxjIdmyxtxuVgnxWUxNahnuykmIHdnvydnuRtnHygnvHdn2ydnxx6nNyenRntnDyknHUxhuagnR3ae1VZnNytxOIimtxtxIbvLxLgaSnt6Db1hE2jhOa0aEMjxObkwEWjaORjBE2jzOyilERjSOVhoEnj6kH6xjL0b3nB6Nxt9OWixtKtxHxtmtnfmRIfjRItluy53IxOhNzta0VtkuR56Sbfa3nOnNItiG2DxHxJxOWE3wy6xjSkJwadItbxSHn2huzekILs0tctx2xzZIRYhNzteOWixDx1Ju2h5unkhuz6zNyUxjId2yxtxuVgnxWUxNahnuyklIHdnvydmuRtnHygmvHdn2ydmxx6nNyemRntnDykmHUxhuagnR3ae1VZnNytxkIi2txtxIbvLxLgaSnt6Dbihu2jhOahauMjxOb5wEWjaOR4BE2jzOy3lERjSOV2oEnj6kH6xjL0b3nB6Nxt9kWixtKtxHxtmtRfmRSfjRyt1uy51IROhNzta0VtkuR56Sbfa3nOnNIti02gxPxKxOWU3wy6xj0kNwadZtyxNHx2huzekILs0tctx2xzZIRYhNztekWixDxhJu2h5unkhtztzGytxSy90tx6xjVxnHWtxNa6njyklRnOnNyhluRvn2yXlNHwnSysmxRtnIywmwHdn2ydmxa6hjawnH3HexVtnty1xuyt0uxjxRbaL3Ljawnd61bihu2jhtaiauMjxDbiwuWjaNRiBu2jzDyhluRjSNVhounj6wHtxSLjbRnt6tx19uWtxuKvxvxdmjIajIyB3tytlSHa4vHdhtzRatVtkyR06HbgavndnDIKiu2VxwxFx0Wt3uy3xSItZtKt521epERjhjzwkxL60NcgxRxwAvxdhDz1euW1xux2IuLf1ERthuzBzvy7xDStxtRtFx3f0vnd6uotm3oso2StmNo60NSsmRot1DSkmHox2uShmHoF3NSwmSos4xHtxHWvkxbgzvMdxDxk4uH6htzwkHb2zxLBxNbowOW2auRdJOL2luydbEL1ouHdxEV1wuRd6ER1xu2dwE31xuymhuzkjybgxwxdxDHk7uz6FNyUxNItjIojjRIt0uy51IxOxNLt0wVtzuy5xSLfo3IO1Nxty0bgxPRKFO3Uxwx6RjKkhw3dVtKxkHx2xu2e1IcsntHt62zzHIxYxN2t0kHj6ta0at3khux1xuL6xNxU3jHdhyatkucgoxyUqNyh1uykhIyd1vydhuyt1Hyghvyd12ydhxy61NyehRyt1DyksHRxFubg2RLaa1xZ6Nyt1uxixtbtLILvaxng6SbthD2khuajaOMjxubjwOWiauRjBO2hzuyjlOR5SuVjoOn46uHjxkL6bjn063xB9NWtxuKixtxtmHntntykjxysjwI64Dx0x2Lt0tVDzvy6xDLjoyI112xtytbgxFROFR3dxPxOStTth3VBSNJtkxxuxt211EcknHHt6uavWRx0xH2t0tHi6ExfhkzfzOyixDIk4txtxGVtnSW9xta6njyxmHRtnNy6mjHknRyOnNRhnuyvn2HXnNywnSxsnxytnI1whwadn23dexV6njywxHIH4xxtxtbiLuL6atnw6Hb2hx2BhNaoakM1xubdwkW1auRdBk21zuydlkR1SuVdokn16uHdxkL1bunm6uxk9yWgxwKdxDx5otyt4Hyt2ty00IxxhxzsayVtkuR56IbOaNntnPItiu25xSxfx3WO3NytxQz1WwaK61SUNwR6hjzkkwLd0tcxxHx2KunehIzsetWtx2xzLIMYcNLteEHfhuzjzuykxtItnGxtxSV9ntW6xjaxnHyt3Nx6njyk3RnOnNyh3uRvn2yX3NHwnSys3xxtnIyw3w1dh2adnx36ejVwnHyHxxItntxhxub6LtLwaHn26xbBhN2ohka1auMdxkb1wuWdakR1Bu2dzky1luRdSkV1ound6kH1xuLmbunk6yxg9wWdxNK1xtxt1HRtntS0jIIx1xys1yxthuz5aIVOkNRt6Pbtaun5nSIfi32OxNxtxQW13wyKx1zUFwT6Yj1kNwHdhtzxkHL20ucexIxsKtnth2zzeIWYxNxtEEbfcE2ixDR1YuR46uy61NxUhjadkyctouygqxyU2NShhuyk2ISdhvyd2uSthHyg2vSdh2yd2xS6hNye2RStsDRkFHbx2uLgaRxa61yZ1NxthEzjktbtzILvxxbgwSWtaDRhJuLjlOy5buLjoOH4xuVjwOR36uRjxO22wu3jxOy1huzjjkb6xjx0x3HB7NztFEyjxtotjHStjtydjHIjnyxgxvL60DV0z2ytxtLMovI61Dxjyyb1x2RtFt3gxPxBp0JiLFMOFtKtJ3xBxN2t1xcuntH16EakIHxtxu2v0RH06HztntLhkuxfhkzizjy4xuI1nux6xNVUnjWdxyatnuyg3xxUnNyh3unknIyd3vRdnuyt3HHgnvyd32xdnxy63N1ehRatnD3keHVxnuygxRIan1xZxNbtLELiatnt6Ibvhx2ghSataDM4xEbjwOW3aERjBO22zEyjlOR1SEVjoOn06EHjxOLkbEnj6kx69jW0x3KBxNxt1EximtItjHyt0tydmHxjxyLg0vV6zDy0x2LtotIM1vx6yDbjxyR1F23txtx6OG1S0wKiR0JKYtxtx32B1NctnxHu6tz1FExkxH2t0uHv6Ra0kH3tktx1xELfxOxjmjH4hua1kuc6oNyUqjyd2ySthuyg2xSUhNyh2uSkhIyd2vSdhuyt2HIghvyd22IdsxR6FNbe2RLtaDxk6HyxmuxgxRbaL1LZaNnt6Ebiht2thIavaxMgxSbtwDW3aERjBO22zEyjlOR1SEVjoOn06ExjxOLkbEnj6Oxj9EWjxkK6xjx0m3nBnNotjEyi0tyt2HxthtzdaHVjkyRg6vb6aDn0n2Itit2Mxvx6xDWj3yy1x21tRtUFkG1BRInHhFzlktLt03cBxNxtZxRuhtz1eEWkxHxtJu2v5Rn0hHztzty4xEIf2ExixtV5njWtxuaBnvy7mwRtn3yamFHvnxytntRjnOy3nOH2nuy0nNx3nkyinE15hOajnE31ekVenHyhxNIh2Hxsxxb6LNLUaHnf60buhR2OhRa1avMdxDb1wOW5aERjBu2gzky4lERiSEV5oun16Ex1xELtbSne6Sxs9DWuxtKtxHxvmvnan2IvjRIj52ywnwRdhRz1axVtkHRv6vbUa2nwn2IviR2jx2xwxwWd3tyixEJhjEz1YE1gOkR4hEzikEL50uc1xEx1IEnthSzeeSWsxDxuxtRtYHRv6FyynHRzhRaQkRc1ovydqDy52EIkhOyh2uyghky42EyihEy52uy1hEy12EythSye2SyssDRuFtbt2HLvaPxg62ydnHRRhNztkOb3zkLjxObhwkWhaORkJEL1lEy4bEL5oEH3xtV1wIRh6IHex22twu3vxPyMh3zwjxbgxPxdxyHt7NzdFyy6xNIUjHo0jHId22yj3xxfxxLt0tV1zky1xuLjouI01Nx3ykbixER5FO3jxEx1SkJemH0hFNThkHxsxx261NcUnHHw63adISxQxI2f0HHN6NztnEL3kux1hOz5zkyhxOIkxER1FE340En56Eo3nty11IShnIye22Stnuyv3PSMnHyg4vSwnxys5vSdnjyhlOHhxOW5kEb+zkM4xExi5En5huz1kEb1zELtxSbewSWsaDRuJtLtlHy0bHLgo2HMxNV4wuR06HRax02uwR3OxIyYhNz4jubBxvx0x3Hw7HzFFHygxPIujxIf52yd3HHRmNIhxuRtCIMgdH2axQxswRM0iHyf22LObRx1hvadoOn56uzvZHSgOPzylRTvxPRjS23wj1Wf52yOxNKhxOR6SNMf53yNx33XaH2vjIx3xxLkxHxgmvIdxOR0Fu3v0Hng6PoynRyk3HSgnvyd4OSknuyv5HSgn0ygl0Sfn2yOmNS1nuy5nSHwxQWMkHbgzPMsxvxdmOIhxuRtDH1heEVjkRyvbHLZoyHax2VtiNR16ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920}