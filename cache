{"Timestamp":1624959602,"Time":"2021-06-29T09:40:02","Flag":0,"Tips":"Tips","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super mode\n\n#. Change mode should be done before connected\n\n#. Enjoy yourself, any issue can be reported by About->Report Issue!\n#. If this app is helpful for you, please rate us 5 ※（star） in Google Play, thanks!","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":520,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east2-apiserviceproj3.cloudfunctions.net/api4","http://139.224.23.234:7100/api/main","http://39.96.64.111:7100/api/main"],"Data":"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uy5xEyfnExtxuVBnvW7xDatotytlxnfovydluRto3ysl2HtoNy6mNRsoRytmDHkoHyxmuahhHaFnN3weSVsnxytxHyvnxxgxvbdLtLkaun66tbwhH22hxaBaNMoxkb1wkWdakR1Bk2dzky1mkRdSkV1oknd6kH1xkLdbkn16kxm9uWkxyKgxwxd0tRkmuI6jNHU4NHdhHzfauV5kIRO6NbtaPntnuI5iS2fx3xOxNWt30yCxwcOWRT5IwK6NjRkhwzdktLx0Hc2xuxeKInshtzte2WzxIxYLNMtckLieDH5hjz2zjytxuSBxvR7FD3t0tnt6xofnvyd5uStn3ysl2StnDy6mNSsnRytnDSknHyxouShnHyF0NHwxSWskxbtzHMvxxxg4vHdhDztkubjzRLax3bjwwWdaQR4JuLkljy4buLkotH4xuVkwDR46uRkxN24wu3kxjy4huzkjwbtxSxjxRHt7tziFtytxHntmto0jIyxlxysnyxtxuL50IVOzNytxPLtouI51Sxfy3bOxNRtFS3dxFxNO10gJwJ6njJkZwxdxt2x1Hc2nuHe6IasItxtx22z0IHY6NztduLhxuRfYERi6NyintxtxGVtnSW9xta6ojyx5HHtoNy65jxkoRyO5Nnhouyv52RXoNyw5SHsoxyt5Iawhwadn23dexV6njywxHIHxxRtDt14euVtkuyjbRLao3HjxwVdiQR56ubkhj25huzkktL5xuykhDz5huMkoNy5muRkYDb4kuykxwcthSnjYRRt6ty40uyt2uyvnvxd4NRshxz0a2VYktRt6SbaavndnDIOit2txyx0xHWg3vydxjWKoO0VIw1Wp3nthuz3kSLt0tctx2xeQEHjhjzwexW6xNxgIRLwjvMdxNR0YuRh6uyf4ExfxuV6nNWUxjadoyStnuRgoxSUnNHhouSknIxdovSdnuntoHSgnvRdo2SdnxK6hNaenR3teDVknHyxxuSgxRRaD11ZeNVtkOyjbtLtoIHvxxVgiSRt6Db5hO2jhOz4kOLjxOy3hOzjhOM2oOyjnOR1YObjkOy0xOcjhkn6YjR063yB4Nyt4OxjntntnHStxtRdCHMjdy2gxvx6wDM0i2yt2tLMbvx6hDajoyn162atItbgpGMVkwWGxvROSt3tj3WB5NytxxauxtR1SEMk5HytxuVvgRL0xHRtYtR16uyflOHihta5kjctouyBqvo7owyth3oaoFyvhxototyjhOo3oOy2huo0oNo3hkoioEo5sORjFEb12kLeaHxh6NyhlHHshxz6kNbUzHLfx0buwRWOaRR1JvLdlDy1bOL5oEHjxuVgwkR46ERixE25wu31xEy1hEztjSbexSxsxDHu7tztFHyvxvIaj2IvmRyj32Hw1wRdhRz1axVtkHRv6vbUa2nwn2IviR2jx2xwxwWd3tyixEahNEU1IEbgpkH4hEzikEL50uc1xEx1ZERthSzeeSWsxDxuJt2t5HnvhFzyzHyzxRIQxRR1Fv3d0Dn56EoknOSh4uSgnkS45ESinEI5luS1nEI1mEStnSIenSSsnDIuotHtxHWvkPbgz2MdxHxR1NRthOz3kkbjzOLhxkbhwOWkaER1JEL4lEy5bEL3otH1xIVhwIRe62Rtxu2vwP3Mx3ywhxzgjPbdxyxtxNHd7yz6FNyUxHI0jHydl2yjmxxf2xxtxtL10kV1zuyjxuL0oNI31kxiyEb5xORjFE31xkxepHThKNUhkHasIxx6xN2U1Hcwn3Hd6SzQFIxfxH2N0NHt6Ea3ku31kOx5xkLhxOxk2Ex1xEV4nEW5xEa3oty15IxhoIye52ntouyv5PRMoHyg5vHwoxyslvRdojyhlOKhhOa5nE3+ekV4nEyixEx5huz1kEb1zELtxSbewSWsaDRuJtLtlHy0bHLgo2HMxNV2wuR06HRax02uwR3OxIyYhNz4jubBxvx0x3Hw7HzFFHygxPIujxIf32ydmHHRmNIhxuRtCIMgdH2axQxswRM0iHyf22LObRx1hvadoOn56uzvkHVgSPLyGRTvxPRjS23wj1Wf52yOxNKhxOR6SNMf53yNx33XaH2vjIx3xxLkxHxgmvIdxOR0Fu3v0Hng6PoynRIk1HSgnvId2OSknuIv3HSgn0Ig40Sfn2IO5NS1nuI5lSHwxQWMkHbgzPMsxvxdmOIhxuRtDH1heEVjkRyvbHLZoyHax2VtiNRh6ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920}  