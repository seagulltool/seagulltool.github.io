{"Timestamp":1635596401,"Time":"2021-10-30T12:20:01","Flag":0,"Tips":"Tips(T for Twitter)","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api","http://39.96.64.111:7100/api/main","http://34.214.84.104:7100/api/main","http://15.223.68.237:7100/api/main","http://54.248.209.124:7100/api/main","http://13.212.23.247:7100/api/main","http://15.237.122.163:7100/api/main","http://52.197.21.234:7100/api/main"],"Data":"puU1XXednXXOZqXYXALdTXXCDNUCnXTPYDLFWNUmXXeJnrXUZOPXXrhKBK9lmOYmKNGeFXGKYOLOEqTYZAFFXBLXTD1XpOiaJsCYKJUloMUvTBzBWAUvmBwBnAivoBUBoA5vTBzBXALrTBYBlA5rDBwBlLUXor5YTqzYXALFTBYXlD5FFHGlJXU9BOCYmIodmXGGKpTYZALBWKUdmXwYnsUKoqQYKAQzDLwYlBUYoF5eTXzXXsLQTXKXmNiCmA5JKBYBEO9YKDCFmqGGoOBYZATFWBU4oCi4BC9XmAGBoXiXJJCYlt10mXGdGXwOTqzYWAUdJXsCmNwClXiPmDwFTNzmWXUJJrYUoO5XDrBKZKUlJO1mnNLenXGKWOnOYqvYXArPZCFXXDXXYOMaZsXYZJJlYMPBYDTBTAUBmD5BnAsXmDGBKAwXTDzBJAPXJDMBWAMXJD0BYLFXYrTYZqvYXAPPZCnXWDvFZHTlXXPdXXJGWpUYJA5rKJUdpXMYmsUKBqCYKATFTLYYWHQCnJ1CoXTXYsFQZXFXZNvCYAPJXBrBXO8YXDBFXqnGYOTYTAhPBCQ4mDGTFCG4KDYXBDCPKHThmAGYmXhXCqG5mHYlmB5XJrCUKqwYTAzdJXPUJqMYWAMCJq0OYDFPYqTGZXvJXrPUZOnXWqJGYpX9YIJlXXXBWBUdoXiKFOiOoqQQDXB0ZBUTJC1lnBLTnCGlWDnTYCvlXDrTZCFlXCXTYCLlXCPTYCLhXDJBXsT9TJKlmXiBpBYdJX5aKXQXDqBiZqUYJD1znsLCnXGXWJnYYDvzXrr5ZsFCXXXXYBLYYFraXqnaYFLdYXTCTJUloXQOKNGNBCs0JreUmXQXDOBwZs51mXhXTCUXoAQXKAGzBB9XmCQdDXBaZXUmJu1XnDL8nOGaWXnXYDvBXrrmZFFlXBXXYOL9XIvlZOPmYNLeZXT1TOKYmAiClqGOlDw8BOCaKKT5TXYXWDQXnD1XoOTaYsFYZJFlZMvXYDPBXArXXD8BXAXTZDXBXATTTDhBEA9TKDiBnABTZDeBTLwXTrzYXqFYXATzWBJdWXTaYXTXTq1ioqsYKDTzTsQCnX0XYJJYJDKzTrh5FsYCTXzXHqaKXFwanqKCDLTdTXYCoJ5lnXvOZNUNBCT0TrYUoXvXZOUwms51nXGXmDT4TDwTTAzvXBXvTBhdFX9aoXXmZudXXDr8ZOhaXXrXZDhBXrrmXFhlXBrXXOh9XIrlXOhmXNreXX01TOMYmAKCKqGOTDz8XOXaTKh5EX9XlCCTmXTXKrQGnpF9TrCYmALYZCKFmBYTWCUFmBQPTCzFWBUzmBQFnBTvXBhFDB5rmBTFTBUeWXdGDrLQZXTXWCvTWXTXXO4YZAT8Tt19oKsdKXTGTpQYnA0PYHJdJXKYTshKFqYYTAzzBLaCmJY9DI5CFXTXTsYQoX5XnNvCZAUJBBTBTOYYoDvFZqUGmO5YnAGFmBT4TDwXTAzFZBrFWCUdmXUanXTmHuXXYDT8WOXaYXTTWDXBYrTmWFXlYBTXWOX9YITlWOXmYNTeIXh1FOUYoAwCKqTOZDT8ZOTaTK55GXwXKC8XZXKXmrYGWpU9Kr1YTAaUJBiFKBhPEB9FKBTzXBhFBBivnBXFZBLrTBwFKB8NZBTFqBieTXwGTrzQXXrXXCvXWXPXYO4YXAJXWDUzKsCCmXBXZGUYKDXzXrF5WsYCJXTXTKMKoHTvTJwaELQdDX1CBJzlWXUOmNGNoCU0TrzUCXFXWOUwlsC1TXzXCCUXmAeXoAUTTBhBDBBdZXTaXXJmWuUXmDU8nOTaHXXTZDrBWrXmZFrlWBXXZOr9WIXlZOvmWNXeZXv1WOXYZAvCIqhOFDU8oOwaKKT5ZXTXXCJXWDUXmOKaKsGYTJalJMiNKBhBGAGNnBTBKAQNnBFBTAiNJBBBZALJTBYBJAYJTBzBWLUXmrKYTqzYTA0FpBUdFXTaTXPXYX4XXtnaXFXlWXXCTXhXEtGGlq99TFzlJXGeWCTCYF1NKqTYWDUrnrnYZAUXGOY1HCYXYAsKTNhdBX99mpCKpITlTXCXTAhTBBwzpBT4TBKXJD5PKHGhoATYTXwXTqz5XHvlWBUXmrUUnqTYHAXdYXJUWqXYYAJCWqXOYDJPWqXGYXJJWrXUYOJXWqXGYpn9IIhlFXUXoBwdKXTKZOTOZqTQTX50GDwTKC8lZCKTmCYlWCUTKC1lTCaTJCilKChTEC9lKBTTXChhBDiBnsX9ZJLlTXwXKB8dZXUaTX0XpXUXFtTaTFPlWXTCYX4XXtTGXqJ9TFhlEXGClq9CTLzCJJGYWDTrYr1YKATXWOU1nCnXZAUKGNodHXw9FpUKTIhlBX9XmBCrpCT4TDKTTAhJBXwXpJTYTtM0nXwdTXhODqBYZATdYXXCWNUCmXUPnDTFHNXmXXJJWrXUXOJXWrXKXKJlWOXmXNJeWXXKXOJOWqXYXAJXIBhXFDUXoOwaKsTYZJTlYMXFWBUBmAKFKBGBTAaFJBiBKAhFGBGBnATBKBQBnAFBTBiBJLBXZrLYTqYYJAYXTBzXWDUFmHKlTXzmTq0ipNUGFJTdTXBGWpJYWAPJXJ4dXXFYWsUKKqCYmABPZFUXKtX5XqFYWXYXJsTQTXMXoNTCTAYJGBQBXOBYHDvFWqUGmOGYoAUXTBz4CBTTWAUFlACTTXzXEJ9YKt90TXhdDXBOZqTYXAFdWXUCmNUCnXTPHDXFYNJmWXXJYrJUWOXXYrJKWKXlYOJmWNXeYXJKWOXOYqJYIAhXFBUXoDwXKOTaZsTYXJFlWMUNmCKBKAGNTCaBJAiNKChBGAGNnCTBKAQNnCFBTAiNJCBBZLLXTrYYJqYYTAzXWBUXmDKFTHzlGXUKWqdCDXLXZtTaXF4lZX4iZXLXYtnGWqU9KFClmXBwZCUeKLXeXqFYWDYrJrTYTAMXoOT1TCUXBA9KDNBdHXv9WpUKmIGloXUBTBzrDCFJWBU4lBCXTDzPDHUhmAQYKXTXTqw5THzlYBnXWrUUmqUYnATdHXXUXqFYWAXCXqFOWDXPXqJGWXXJXrJUWOXXXqJGWpX9XIJlIXhNFXUXorwGKpT9ZrTYYATUTB5BGBwPKB8BZBKzmBYBWBUvKB1BTBarJBiBKBhNEB9BKBTeXXhGBriQnXXXZBLXTDwFKH8lZXTaqpiGTXwXTtzaXF4lYXPeXXTXXtBGTqh9EFGllX9YTqzGJFGXWtTYYD1rKrTYWAUXnOn1ZCUXpAQKBNadXXs9TphKBI9lmXCNpATzTBGBTDh4BDwXpDTPTH9hlA8YWXUXKqT5THTlYBTXTrMUnqCYTAadXXBUXqFYXABCXqJOXDBPXqnGXXBJXrrUXOBXXqvGXpB9YIMlWXUFnX9XlrCGnpT9TrTYYATOTB5FGBwJKB8FZBKFmBYFWBUBKB1FTBaXJBiFKBhTEB9FKBTeXXhGBriQnXXXZCLXTDwFKH8lZXTaqpiGTXwXTtzaXF4lXXXeXXvXXtJGWqU9KFClmXBaZKUQKFXGXHFYWDYrJrTYTAMXoOT1TCvXDAMKpNodHXv9WpUKmIGloXUFTAzvDBLTWBU4lBCXTDzPGH9hpA8YWXUXKqT5THPlTBhXFr9UoqXYZAddYXPUXqhYYAPCXqhOYDPPXqhGYXPJYrhUYOPXYqhGYpP9YI0lTXMBmXKXKrGGTpz9XrJYWAUKmBKFKBGFTBaFJBiBKBhFGBGXnBTFKBQTnBFFTBiPJBBFZBLeTXYGJrYQTXzXWBUXmDKFTHzlTX0appUGFXTXTtPaWFTlXX4eWXPXYtTGTq19oFslKXTCTBQGnL0XYHJYJDKrTrhYFAYXTOz1BCaXFAwKDN1dDXT9TpYKoI5lnXvBZAUPFBTBTDY4oDvXZDUPmHehmATYTXwXTqz5XHvlTBhXFr9UoqXYZAddXXrUZqhYXArCXqhOXDrPXqhGXXrJXrhUXOrXXqhGXpr9YI0lTXMXmXKXKrGGTpz9XrvYTAhwED9FlBCrmDTFKBQNnDFFTBCJmDLFZBKFmDYFWBUBmDQFTBzeWXUGmrQQnXTXXDhXDD5FmHTlTXUaWpdGDXLXZtTaXF4lXXBeXXBXWtTGTqh9EFGllX9YTKz9JLGNWtTYYD1rKrTYWRtFx3uxtx1SEzkmHVt3uTv6Rx0xH2t1tc4nuHj6EzfFExixj2i0tHt6GatkS39ktx6xjLxxHxtnDR6hjakkRcOoNyhquovl2SXhNowlSSshxotlISwhwodl2Sdhxo6ljSwhHoHlxStstR3FEbt2uLjaRxa63yj4wxdxQb1LkLkajn16kbkht21hkakaDM1xkbkwNW1akRkBD20zkyklwRtSSVjoRnt6tH3xELtbunv6vxd9jW5x2KFxtxtmSRamvSdjNIV3tytmyx0xHLg0vVdzDyNxxLVowIK1yxtyub3xSRtFt3tx2xepEMjnjKwJx06YNxgxR2w1vcdnjH56uz4FDxkxu2k0uH66NaUkj3dkyxtxuLgxxxUoNHihuakkIcdovydquotmHyghvodm2ydhxo6mNyehRotmDykhHoxmuyghRoam1yZsNRtFEbt2uLjaRxa63yjmwxdxwbjLOLkaDnj6ObkhN2jhOakajMjxObkwtWjaORkBD2jzOyklwRtSSVjoRnt6tH2xuL6bNnU6Nxt9HWcxRKtxux5mInOnNotjwIt4uy53Sxfx3LO0NVtzFyCxILJouIh1wx6yjbkxwRdFt3xxHx2puKekIysWtatY2xzxI2Y1NctnEHf6uzfFExixj2t0uHB6va7kD3tktxtxxLfxvxd0unth3ask2ctoNy6qNosmRothDokmHoxhuohmHoFhNowmSoshxotmHovhxogmvodsNR0Fub62tLwaHx26xyB3NxoxObhLkLdaknh6kbdhk2hhkadakMhxkbdwkWhakRdBk2hzkymluRkSyVgownd6NH0xuL6bNnU6Nxt9HWzxvK6xDx0m2RtmtSEjwI60Dyjlyx1x2Lt0tVUzGyBxvLFowIO1txty3bBxNRtFx3uxtx1NEMkmH1tRu0vkRx0xH2t1tc0nuHf6kzfFOxixj2t0uHB6va7kD3tktxtxxLfxvxd2uRth3ask2ctoNy6qNos2RythDok2Hyxhuoh2HyFhNow2Syshxot2Hovhxog2vodsjR3Ftbt2ILvaxxg6SytlDxkxEb0LOLjaEn06ObihE20hOahaEM0xOb5wEW0aOR4BE20zky6ljR0S3VBoNnt6kHtxuLvbvnd6Nxf9RWwxIKtxux5mInOmNytjFStjuI5nSxfx3LO0NVtzSyjxGLloxI51vx6yjbkxwRdFt3xxHx2Ru0eiIWsJtKtk2xzxI2Y1NctnkHf6OziHDx0xt210tHt6GataS39hNxtxuLgxxxUmNohxuRkFI3d0vnd6uotoHygnvSdo2ydoxS6oNye0RStoDyk1HSxouyg2RSao1yZ3NHtxOWiktbtzIMvxxxgmSotxDR2Du1keOV1kuykbOL0ouHkxOVkiuRk6Objhu2khOzikuLkxky6hjz0h3MBoNytmORiYtbtkHytxtcfhRnfYRRt6uy5oIyO4Nyt50Rtnuy5xSRfC3MOdN2txSxiwQMKiOy52vL6bjxkhwadotnx6Hz2kubeNIzsltytx2RzSI3YjNWt5OyixD0hxuRkSuM15uy6xN3Ukj2ddy2tiuxgxxLUxNxhnuykxIRdFv3d0unt6Hog0vSd42Sd0xS65NSe0RStlDSk0HSxmuSg0RSan1SZ0NStouHixtWtkIbvzxMgxSxtnDy2xOR0DO11eOV0kOy0bOL0oOHkxOV0iORj6Ob0hO2ihOz0kkL6xjy0h3zBhNMtouyimtRtYHbtktykxxcshwn6YDR062yt0tyD2vH6nDSjjyI142xtxtLU00VSzSyFxPLJotIt13xByNbtxxRuFt31xExkOH0tKuUvBRz0YHxtxt2k1EcfnuHi6jakWux1xu260NHU6jxdhyzFztytxxIf4vxdxuVtn3Wsx2atoNS6oNnsoRStoDRkoHSxouHhoHSFoNxwoSSsoxntoHSvoxUghvadnD3ketVtnIyvxxIg4SxtxDbhLuLkaOn56ubkhO24huakaOM3xubkwOW2auRkBO21zuyklkR6SjV0o3nB6NHtxkLtbunv6vxd9NWjxyKcxHxjmvn6nDy0j2ItmtyQ0vx6xDLj0yV1z2ytxtLgoQI21wxFyPbJxtRtF33BxNxtRx0ult11VEKkJHxtxu2v1Rc0nHHt6ta5WuxixE2f0OHj6Nxhhuz6zNyUxjydxyRtFu3g0xnU6Noh0uSk4ISd0vSd5uSt0HSglvSd02SdmxS60NSenRSt0DSkoHHxxuWgkRbaz1MZxNxtnuRjhtztkIbvzxLgxSbtwDWjaERkJOLilEykbOLhoEHkxOV5wERk6OR4xE2kwO33xEykhkz6jjb0x3xBxNHt7uzjFtytxHItjty0nIyxoxys0ynthuz5aIVOkNRt6Pbtaun5nSIfi32OxNxtxvWH3FyOxOW5ow16ljykOwRdhtzxkHL20ucexIxsItnth2zzeIWYxNxtxuRjYjRj6uyj0EnfhEatkucBovy7qDotmtSthxofmvSdhuotm3Ssh2otmNS6hNosmRIthDokmHIxsuRhFHbF2NLwaSxs6xyt0HnvhxzgkvbdzNL4xtbtwIWvaxRgJSLtlDy2bkLkoOH1xkVkwOR06kRkxO2kwk3kxOyjhkzkjObixkxkxkH67jz0F3yBxNItjOyt4uyvlvHdmNysxxR0C2MYdt2txSxawvMdiDyO2tLtbyx0hHagovnd6jzKIxVUOF3RJ0MtxuR3SS3tjtWt52yexEajxjRwSxM65NygxRVwgvLdxNR4YtRh6uy2nuRkhtatkGctoSy9qto6ljoxhHotlNo6hjoklRoOhNokluSvh2oXlNSwhSoslxStsIRwFwbd22Ldaxx66jywnHRHhxztktb3zuLtxubjwRWaa3RjJwLdl1y4bkLkotH4xkVkwDR46kHkxN24wk3kxDy3hkzkjNb3xkxkxwHt7SzjFRytxtI3juItmuyv5vRdmNHshxz0a2VYktRt6SbaavndnDIOit2txyx0xHWg3vydxtaJR1UEYGyROFnthuz3kSLt0tctx2xeZERjhjzwexW6xNxgJR2w5vndhjzkzuy4xuIkxuRfFE3t0unB6vo7owIt23SaoFIv3xStotIj4OS3oOI25uS0oNI3lkSioEI5mOHjxEW1kkbezHMhxNxhmHHshxz6kNbUzHLfx0buwRWOaRR1JvLdlDy1bOL5oEHjxuVgwkR46ERixE25wu31xEy1hEztjSbexSxsxDHu7tztFHyvxvIaj2Iv3Ryjm2ywowRdhRz1axVtkHRv6vbUa2nwn2IviR2jx2xwxwWd3tyixEchNEa1ZE1gNkR4hEzikEL50uc1xEx1ZERthSzeeSWsxDxuJt2t5HnvhFzyzHyzxRyQ0Rx1xvVdnDW5xEakoOSh1uxgokS41EnioES51uR1oES11EHtoSSe2SRsoDSu2tKthHavnP3ge2VdnHyRxNyt0Ox3xkbjLOLhaknh6ObkhE21hEa4aEM5xEb3wtW1aIRhBI2ez2ytluRvSPVMo3nw6xxgxPLdbynt6Nxd9yW6xNKUxHx0mHRdm2SjjxHfnxItxtR1CkM1du2jxux0wNM3ikyi2EL5bOxjhEa1okne6Hzh5NKhpHJskxa6xNRUSH3wj3Wd5SyQxI0fxHRNSNMt5Ey3xux1xOL5xkxhnOIkxER1FE340En56Eo3otI12IShoIIe32StouIv4PSMoHIg5vSwoxIslvSdojIhmOHhxOW5kEb+zkM4xExinEI5xuR1DE11eEVtkSyebSLsoDHuxtVtiHR06Hbgh22MhNz4kuL0xHyah0zuhRMOoIyYnNR4YubBkvy0x3cwhHnFYHRg6Pyu0xyfm2Rd4HRRmNShxuRtCIMgdH2axQxswRM0iHyf22LObRx1hvadoOn56uavZHygOPTyhRJvxPRjS23wj1Wf52yOxNKhxOR6SNMf53yNx33XaH2vjIx3xxLkxHxgmvSdxOR0Fu3v0Hng6Poy0RIk4HSg0vId5OSk0uIvlHSg00Igm0Sf02IOnNS10uI5oSHwxQWMkHbgzPMsxvxdmOShxuRtDH1heEVjkRyvbHLZoyHax2VtiNR16ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920}  