{"Timestamp":1635478801,"Time":"2021-10-29T03:40:01","Flag":0,"Tips":"Tips(T for Twitter)","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api","http://39.96.64.111:7100/api/main","http://3.96.141.251:7100/api/main","http://13.115.245.13:7100/api/main","http://54.93.80.161:7100/api/main","http://18.193.108.196:7100/api/main","http://54.253.194.109:7100/api/main","http://54.202.113.14:7100/api/main"],"Data":"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u2f1EctnuHB6vz7FDxtxt2t0xHf6vadku3tk3xsx2LtxNx6mNSsxRRtFD3k0Hnx6uohmHoF2NSwmSos3xStmHov4xSgmvod5DShmuo6ltSwmHo2mxHBxNWokOb3zkMdxOx3mkSdxOR3Dk1deOV3kkydbOL3okHdxOV3ikRm6ubkhy2ghwzdkDLhxuy6hNzUhNMto2yymxRAYtbtkSyaxvcdhjnGYtRt6yy0nHyg4vydotyJlunEhGzBavVtkuR36Sbtatntn2IeiE2jxjxwxxW63NygxRzwKvadZD1hOunhhuzikuLf0kctxuxBZvR7hDztetWtxxxfJv2d5unth3zsz2ytxNy6oNxsxRVtnDWkxHaxouIhoHHFoNIwoSxsoxItoHnvoxIgovRdotI3otHtoIIv0xUghSatnD3heEVjnOy5xEyjoOx4xEbjLOL3aEnj6Ob2hE2jhOa1aEMjxkb6wjW0a3RBBN2tzkytluRvSvVdoNnf6RHwxILtbun56IxO9NWtxFKtxux5mSRfm3oOjNItjSyDxvRJCGMEdw26xjxkwwMdityx2HL2buxehIasotnt62azYIbYONJtmkUfxERiSj3hjuW45uy6xNaUxjRdSyMt5uygxxVUgNLhxuRkYIRd6vydnuxtxHVgnvWdx2adoxI6lNxeoRItlDnkoHIxluRgoRIal1HZoNItmERjotItmIKvhxagnS3teDVknEyixOyjxERiDO1ieEVikOyhbELioOH5xEViiOR46Ebihk26hjz0k3LBxNythEzjhtMtoHytmtRkYxbskwy6xDc0h2ntYtRD6vy6nDyj5yH1m2ytjtyUnQxXxHLF0GVOztytx3LBoNIt1xxuytb1xERkFH3txuxvNR20oHctNtUi6uxfxk2i1tcknjHi6tztFGxtxS290tH66jaxkH3tkNx6xjLkxRxOnNyhxuRvF23X0Nnw6SoslxStnISwlwSdo2SdlxS60jSwlHSH1xStltS22EStluSj3RHax3WjkwbdzQM1xuxknjy1xuRkDt11euVkkDy1buLkoNH1xuVkiDR06ubkhw2thSzjkRLtxty2hEzthuMvovydmNRjYybckHyjxvc6hDn0Y2Rt6tyQ0vy65DHj2yy112nthtzVaFVVkSRe6Fblatntn3IBiN2txxxuxtW13EykxHUtNuJvlRb0N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","Source":0,"PublishVersion":920}