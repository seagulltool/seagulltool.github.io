{"Timestamp":1646571601,"Time":"2022-03-06T13:00:01","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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5xuZ4Ruh6zNeUWjxdxyJt2u5gnxhUzNzhyuxkII2dxvxdVuntWHxgavndy20dnxn6yN0eRRntyD0kHHnxyu0gxRnay10ZnNntyu0tUuhjaRna33ejVwndywx4IE2jxDx4bELjLNa4nE6jbDh32EhjaNa3MExjbjw3WEajRwBt2SzjyR3tRtS1Vuo6nN6UHNxtL2bvn26Xxt9tWSxaKvxdxtmSntntoyj0SHjgIv3dxjxKLG0UV1zVyuxtLuo3IS1txtytb2xeREFj3jxwxxS6LNkgJRVwavYdxDx22N12cunhHu6kzuF6xNxU2j0dHy6taukg3xkUxNxhLuxkxImdovxdRuFt3H0gnv6do2ndyxn6SNneyRotSDnkyH0xSungyR1aS1nZyN2tSOntyu3jHRxaW3kjbwzdMGxkxumjoNxkRuDj1jekVukjytbkLuojHDxkVuijRN6kbuhj2whtzSkjLRxtyth3zuh6MNoUyNmtR2Yvb2kXytxtcShanvYdRt6Syt0tyy10yH2gnvmdSDxNR1CEM1dN23xtxuw3MSityt2tL2bexEhjajownx66aN6g1RNw3vldyjx0RDS03ujhWE5fyExtauxBRvS7MD5tytxtVxgfLvxdRuYtR36sy20txNh6aNkscRotyDqkyHnxIuhhyHnFyNhwySnsyxhtyHnvyxhgyvndyth5ytntyIsvRxFgbS2tLDa3xu6jyO02xuhjzOk1buzjLOx0buwjWOakRuJjLOljyubjLko6Hjx0V3wBRN6tRExt2uwv3vxdyjhazIjBbtxtxSxaHv7dztFRytxtIyj0IHlgyv1dxDmlIxxVR1CfM0dt2ux3xSwtMtity22eLEbjxjhwaxo6nN6gzR5wyvNd0tL5cjxiRuS33ujjWu56yNxUajxdRyStMu5gyxxUVNghLuxkRIYdRv6dyu1tnHhgavkdc2odyxq6yNneoRhtyDnkoHhxyungoRhay1nZoNhtyun6othwyHn2oxsBRNFobu2jLuadxu6jyu1dnuhjzukdbuzjLuxdbEwjWuadREJjLulmyubkLyogHwxdVNwtRu6vRvxd2jwa3IxBythtzSjabvxdxtxRHt7tzyF0yHxgIvjdIjnly11FRGnCoGxtRuC3MSdt2txtx2weMEijyj2wLxb6xNhgaRownv6dzN5fSuNfLk0fcExtRuSB3vj7WD5tytxtaxxfRvSdMu5ty3xsV2gtLNx6RNYsRR6tyDokRHhxaukhcHoFyNqwySnsSxhtyHnvSxhgyvndINh5yun6IthwyHn2IxhByNnoIksjRuFdbk2jLuadxk6jyuodRkhjzukdbkzjLuxdbuwjWuamRuJkLylgywbdLNo5Hux6VNwURN6tHyx122wf3xxRythtzSjabvxdxDxPHt7tzyF0yHxgnvodRjnNSxj5yPx2R0CtMud32SxtxtwtM2ieyE2jLjbwxxh6aNognR6wavZdVNO5auK2UExfRuSf3uj6WN5Uyjxd1yxtRuSgMx5UyNxh2ukkLIxdRvYdRu6tyH2gxvxdV2ndWxx6aNneyRntxDnkyHnxnungyRnaR1nZyNntHuniytotRInvyxogKShtaDni3uejVOnhyuxjyOx5RuDj1Oe4VukjyOb3LuojHOx2VuijRk66bjh023hBzNktLuxiythtzHhtMto0yImxRxYsbyktyux5cIhOnNYtRP6tyuj5oSjfS3jOINxtRQCGMwdK2RxVxww6Mjikyw2dLtbxxHh2auoenI6sztYt12SzzIjYzNxtRuSi3DjkWu5kyux01ux6RNSUMj5dyyxt2ukgLxxURNYhRu6kyI0dxvxdVuntWHxgavndy2odnxn6yNoeRRntyDokHHnxyuogxRnay1oZnNntyuotUuhjaRna33ejVwndyQxkIuxjRjDk1uejVtkkyubjLDokHuxjVNikRu6jbDhj2uhjzwktLSxjyRhtzth2Muo6yNmURNYtbyk1y2xfcxhRntYtRS6ayvodyDmPxtntIyj0IHxgRvCdMjdN2xx5xPw2M0ityu23LSbtxthta2oenE6jzj5wbxp6aN1gMRxwRvSd3tjjWN50yux00uxkRtStMG5tySx9xtx6LjxxxH1txNh6ajkkcRoOyNqiyunvS2hXyNnwSShsyxntSIhwywndS2hdyxn6SjhwyHnHSxstRtFkbE2tLuajxR6ay3njxwxdb1L0Luajnt60buhj2Dh0auajMNx0buwjWja0RuBj2tz0yuljRwStVSojnR6tHtxkLEbtnu6vxv9dWNxsKxx0x21YRtntISjaIvldyD3OHthtzya0VHkgRv6dbDalnxnVI1if20xtxux3WS3tytxtz2ZeUE5jbjOwRxh6zNkgLR0wcvxdxjI3nuh0zuekWExfxkxtRuYBRv67yD3tHthtaxkfcvodyuqty3nsy2htyNn6yNhsyRntoDhkyHnxouhhyHnFoNhwySnsoxstRHFvbx2gLvadxt6iyt3tHIhvzxkgbSztLDxjbuwjWOaiRuJjLOlhyubjLOo5HuxjVOw4Ru6jROx32uwj3kx6yjh0z3jBbNxtxExtHu7vzvFdyNxsIxj0I2mYyt4tRSnaSvxdRDCOMtdt2yx0xHwgMvidyD2OL1bUxGhBayotnu63aSYtytOtJ2ieKExjRjSw3xj6WN5gyRxw0vxdRtSiMj55yux5xux5Lux6xNnUSjxdRyFt3u0gnx6UoNnhyu4kSIndyv5dSuntyHlgSvndy2mdSxn6yNneSRntyDokHHxxWukgbRzaM1xZxNntSDxdRHD01SeFVNkkyub6LtowHHx2VxiBRN6obOhk2uhdzOkkLuxdyOhkzuhdMOokyumdROYkbukdykxkcuhmnuYkRy6gyw0dyNmkyuj6yN1UxNxtLR0fVxzgywx6LDo0I21txtyMbvx6RDFj3yx1x2StLtkhJGVXaPYdxFxO2t1tc3nBHN6taxIuxtx12E0kHH6tzunvLRk0xHhtztz0yExfyO1ixNxkVun1WExtaunByv07xwnty30anFnvyx0tRtnjyO03HOn2yu00xNn3yk0i1Eh5aOnj3Ee1VkneyHxhyN1hxHxsbxL6LNaUnH6fb0hu2RhOaRa1MvxdbDw1WOa5REBj2uzgykl4RESiVEo5nu61HEx1LEbtnS6exS9sWDxuKtxtxHovHv3ax21vyRljR2hwzwadVRk1Rx6tbHavnvnUI2iw22xvxRxjW23wywxdWtFiTEJh1Ep1nEhgzkk4LE0icEx5xuZ1REh1zEetWSxexSJs2D5unthtzHzvyFxyIH4zxRxQVRn1WvxdaDn5yE0kxOnhyu0gnkn4yE0iREn5yu01HEn1yE1tRSneyS1sKDhuatnt3HevVPngy2xdIH4RxNxtbOL3LkajnO6hbkhh2OhkaEa1MEx4bEw5WEa3RtB12IzhyIleR2StVuovnP6Mx3xwLxbgnP6dxy9tWNxdKyx6xNoURHn0IHjdy2mjyxofxxxtLt01Vkz1yuxjLuo0IN13xkyibEx5ROFj3Ex1xkOe1HGhUNAhaHIsxxx62N1UcHnwH36daSIQxIxf2H0NHN6tzEn3Luk1xOh5zkzhyOxkoEx1REF43E05nE63otn1yI4hSIney25tSunvyPlMSHngyvmwSxnsyvndSjnhyOohHOx5WEk+bkz4MExixEo5nuh1zEk1bEztLSxebSwsWDauRtJtLHl0yHbgL2oMHNx4Vuw0RH6aR0xu2RwO3IxYyNh4zujBbvx0x3xwHH7FzHFgyPxuoxjfy21dyH1RyNnhHuhtzIagVHkaRQ6sbRa0nHnfI2iO2Rx1xvxdWO35yuxvJHkgTP5yVROvHPhjz2kwL10fc2xOxNKhnOh6zNefW3xNx3EXbHcv2Ix3RxYkRH6gyvndHOh0aukvcHogyPqyyRmkSHhgyvmdIOhkyumvIHhgy0mgI0hfy2mOINh1yum5ISswRQFMbH2gLPasxv6dyOnhHuhtzHkhbEzjLRxvbHwZWyaaR2JtLNl1yubtLSoNHPxOVNwhRu66Rjxh20wi3vxdyOh1zujtbSxNxvxOKj9KOBC","Source":0,"PublishVersion":920}  