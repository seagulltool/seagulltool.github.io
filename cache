{"Timestamp":1645768801,"Time":"2022-02-25T06:00:01","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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xytoHHvnxygovadhNaint3teIVvnxygxSItxDRiDk12eOVhkky2bOL5okH2xOV4ikR26Ob3hk22hOz2kkL2xky6hjz0h3MBoNytmERtYubvkvydxRc1hxntYSRa6vyd4jyG3tHtoyR04HHghvzdaDVJkGRh6GbSawntnuI3iS2txtxtx2We3EyjxjbwJxU65NVgNRxwhvzdkNLi0jc0xuxiZERfhEzteuWBxvb71DVthtztzxyfxvSdxuRtF33s02nt6No62Nos2RSt2Dok3HSx2uoh4HSF2Now5SSs2xotlHSv2xogmvHdxNW5kub6ztMwxHx24xHBhNzokEbkzuLdxEbkwuWdaERkJuLdlEykbuLdoEHkxuVdwERk6uRmxu2kwy3gxwydhNz5jub6xNxUxNHd7HzfFuy5xIIO1Nytm0ytnuR5mSyfx3ROCNMtd32gxQxOwuMUivy62jLkbwxdhtaxoHn26uae5IKsNtUtn23zxIRYSN3tjEWi5Nykxja3xuR1SuM65NyUjjLdhyRtYuRg6xyUnNxhhuakkIcdovydquytoHyghvydo2ydhxy6oNyehRytoDykhHyxouyghRyao1yZsNRtFkbi2tLtaIxv6xygnSxthDz1kkb2zOL0xkb2wOWkakR2JOLjlky2bOLiokH2xOVhwkR26kH6xj20w33BxNythkzijtbtxHxtxNHd7yz6FDy0x2ItjtINmvy63DRjmyy1x2RtCtMEdv2kxGxHwvMNityt23LBbNxthxauotn16Eak5HKtNuUvnR30xHRtSt3jjEWf5uyfxkaixNRiStMt5GytjSL9htR6YjRx6Hyt2Nx6hjakkRcOoNyiquyvo2yXhNywoSyshxytoIywhwydo2ydhxy6ojywhHyHoxytstR2FEbt2uLjaRxa63yj2wxdh1zjkubjztLjxubjwDWjauRjJNLjluyjbjLjouHjxtVjwuRj6wRtxS2jwR3txty2hEztjubvxvxdxRH17xztFSyaxvIdjtIR4tytnyH0mHIgxvRdCDMNdu2hxQxJwvMtiuy32SLtbtxth2aeoEnj6jawZxy6RNTghRawxvRdSt35juW25uy3xuajxuR6SNMU5jydjyLthuRgYxRU6Nyh5uxkhIadkvcdouytqHygovodh2ydoxo6hNyeoRSthDykoHSxhuygoRSah1yZoNStsORtFubj2RLaa3xj6wyd5GxihuzjkNbizuLjxjbiwuWjatRiJuLjlDyibuLjoNHixuVjwwRt6SRjxR2twt30xuy6hNzUjNbdxHxfxuH57IzOFNytxwItjuI54Syf33nOmNItx3RgCQMOdu2Uxvx6wjMkiwyd2tLxbHx2huaeoIns6tatI21zpITYnNJtxORfSE3fjOWi5DyixtatxGRtSSM95ty6jjLxhHRtYNR66jyk5RROhNahkucvo2yXqNywnSIshxytnIIwhwydn2Idhxy6njIwhHyHnxIthtyjnEItsuRjFRba23Ljawxd6Qyj5uRjhDzikubjzNLixubjwjWiauRjJtLiluyjbDLiouHjxwVtwSRj6RRtxt2jwE3txuyvhvzdjRb1xxxtxSHa7vzdFDyPxtItjyI00HygmvRdntSJxGRUCvMWdu2txux3wSMtityt22LebExjhjawoxn66NzgZRSwOvTd1tcjxuR4Su3fjuWf5uy6xNaUxjRdSyMt5uygjxLUhNRhYuRk6IydlvRdhuatkHcgovydq2ydoxy6hNyeoRythDykoHyxhuygoRyah1yZoNythOytouyjsRRaF3bj2wLda1x06uyjltR0huzjkDb0zuLjxNb0wuWjaDRkJuLjlNykbuLjowHtxSVjwRRt6tHhxu26wN3UxNydhHzfjub5xIxOxNHt7PztFuy5xSnfo3RO1NRtnwRdhPzNauVVkwR66jbkawndntIxiH22xuxexIWs3tytx2bzNIKYZN1tpORfhuzfkELi0DckxtxtAGxthSz9etW6xjbx1HVthNz6zjykxRyOxNRhFu3v02nX6Now2SosmxSt2IownwSd22odoxS62jow0HSH2xot1tS22Eot2uHjxRWak3bjzwMdxGxknuRjhNzkkubjzjLkxubjwtWkauRjJDLkluyjbNLkouHjxwVtwSRj6RRtxt22wE3txuyvhvzdjRb1xxxtxSHa7vzdFDyOxtItjyy0lHyg2vydnjxOx1LE0wVWzyytxuL3oSIt1txty2bexERjFj3wxxx6NNzg0RywRvUdJtxkxu2j1EcfnEHf6ua6WNxUxj2d0yHt6ucghxRUxNLhxuxk1IxdhvadkuctoHygqvydo2odhxy6oNoehRytoDSkhHyxouSghRyao1SZhNytouStsuRjFRba23Ljawxd6Qy5nuxjxjb5LuLjatn56ubjhD25huajaNM5xubjwjW5auRjBw2tzSyjlRRtStVhoun66NHUxNLdbHnf6ux59IWOxNKtx0xt1uR5mSIfj3yOnNytnRxCxPLK0xVhzvy6xjLkowId1txxyHb2xuReFI3sxtxtR2zzLIKYoNztIuxfxu2i1tc4nuH16ua6WNxUxj2d0yHt6ucghxRUxNLhxuxk1IxdhvadkuctoHygqvydo2odhxy6oNoehRytoDokhHyxouoghRyao1oZhNytoDodsHR0FSbF2NLkaux66tywnHx2xxbBLNLoaOnj6ubdhO2jhuadaOMjxubdwOWjauRdBk2jzuydlkRjSuVmounk6yHgxwLdbNnk6ux69NWUxNKtxRxf1xRgmwy6jDy022yt1txMxvL60DVjzyy1x2LtotIF11xOyGbGxPRJFt3tx3xBNNzt0xyuRtU1JExkxH2t1ucvnRH06HatWtx0xE2f0OHi6NckhuR1xELtxuxB5vH7hwatk3caoFyvqxytotojhOy3oOo2huy0oNS3hkyioES5hOyjoES1hkyeoHShsNRhFHbs2xL6aNxU6Hyf10xuxRbOLRL1avnd6Db1hO25hEajauMgxkb4wEWiaER5Bu21zEy1lERtSSVeoSns6DHuxtLtbHnv6vxa92WvxRKjx2xw1wRdmRS1jxHtmHovxvRUC2Mwd22vxRxjw2Mwiwyd2tLibExhhEa1oEng6kz4kEVipEz5Iua1xER1SE3tjSWe5SysxDKuxtRtSHMv5FyyjHLzhRRQYRR16vyd3DR5hEakkOchouygqky4oEoihEy5ouo1hEy1oEothSyeoSoshDyuotothHyvoPogs2RdFHbR2NLtaOx36kyj3ORhhkzhkObkzEL1xEb4wEW5aER3JtL1lIyhbILeo2HtxuVvwPRM63Rwxx2gwP3dxyythNzdjyb6xNxUxHH07HzdF2yjxxIfjxIt1ty1jkI1xuRjCuM0dN23xkxiwEM5iOyj2EL1bkxehHahoNnh6HasIxK6ONJUmH0wx3RdSS3QjIWf5HyNxNatxER3SuM15Oy5jkLhhORkYER16Ey4lEx5xEV3ntW1xIahnIye52Rtnuyv5PHMnHyglvRwnxyslvHdnjyhlOxhnOy5lE1+hka4nE3ieEV5nuy1xEI1xERtDS1eeSVskDyubtLtoHH0xHVgi2RM6Nb4hu20hHzak0LuxRyOhIzYhNM4ouyBnvR0Y3bwkHyFxHcghPnuYxRf62yd0HyR0NHhmuItjIogxHRaCQMsdR20xHxfw2MOiRy12vLdbOx5huavoHng6PayIRyvNPJj12cwx1RfS23OjNWh5Oy6xNKfx3RNS3MX5HyvjIL3hxRkYHRg6vyd3Ox0xuVvnHWgxPaynRyklHRgnvydlOHknuyvlHxgn0ygl0nfn2yOlNR1nuy5lSKwhQaMnH3gePVsnvydxOohxuRtDH1heEVjkRyvbHLZoyHax2VtiNR16ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920}