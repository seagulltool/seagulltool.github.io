{"Timestamp":1651076401,"Time":"2022-04-27T16:20:01","Flag":0,"Tips":"Tips","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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Rx0xH2t0tHh6uaiku3fkExixtL1xtxtmGItxSR9Ft360jnx6HotlDS64jSklRSO5NShluSvl2SXlNSwmSSslxStnISwlwSdo2HdxxW6kjbwzHMHxxxtmtI2xERtDu1jeRVak3yjbwLdo1HixOVkitRi6ObkhD2ihOzkkNLixOykhjzihOMkotyimORkYwbtkSyjxRcthtn2YERt6uyv1vRdntSgjxyg5vy6mDx0x2Lt0tVNzvy6xDLjoyI112xtytbgx0RXFQ3hx1xNSt0tk3zBkNatYxbuNtT1kExkxH2t1ucvnRH06HztHtx2xE2f0EHi6Naiaj3thuxBxvL7xDxt4tHthxafkvcdouytq3osl2IthNo6lNIshRotlDIkhHoxluIhhHoFlNywhSoslxytsHRvFxbg2vLdaDx46uy6mtKwxHR2Dx1BeNVokEyhbkLdoEHhxkVdiERh6kbdhE2hhkzdkELhxkydhEzhhkMmouykmyRgYwbdkDy4xuc6hNnUYNRt62yv02yX4tRtmSoajvyd4txSxtLt0yV0zHygxvLdoDIK1xxUyvbVxyRtFu33xSxtNtJti2ceSEJjkjxwxx261NcgnRHw6vzdHDx4xu200uHf6Eafau36hNxUxjLdxyxtnuogxxRUFN3i0unk6IodlvSdmuStlHSgnvSdl2SdoxS6lNSe0RStlDSk1HSxluSg2RHax1WZkNbtzkMtxuxjnRoax3RjDw1deQVikOykbjLioOHkxtViiORk6DbihO2khNzikOLkxjyihOzkhwMtoSyjmRRtYtb4kuy6xNcUhNntYIRj6Rytouy5nIHOmNItjwItlux5xSLf03VOzNytxOLCoFIK1OxEywb6xjRkFw3dxtxxNH22juzeWIzsktxtx22z1IcYnNHt6kafWOxfxO2i0DHk6txthGztzSy9xtI6ljxxxHVtnDW6xjakoRSOmNRhouSvm2HXoNSwnSRsoxStnIHwowSdn2xdoxS6nj1whHaHnx3tetV0nuy6xtIwlHx2xxbBLNLoaunh6kbdhu2hhkadauMhxkbdwuWhakRdBE2hzkydlERhSkVmounk6yHgxwLdbNnj6txt9HWtxtKkxxxsmwn6nDy0j2otjtyD5vx6xDLj0yV1z2ytxtLgovIS1vxfy2bJxtRtF33BxNxtRxzuntz12EUk5Hxtx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","Source":0,"PublishVersion":920}  