{"Timestamp":1615381202,"Time":"2021-03-10T13:00:02","Flag":0,"Tips":"Tips","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super mode\n\n#. Change mode should be done before connected\n\n#. Enjoy yourself, any issue can be reported by About->Report Issue!\n#. If this app is helpful for you, please rate us 5 ※（star） in Google Play, thanks!","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":520,"Apis":["http://3.106.134.198:7100/api/main","https://213c59dc048e.blob.core.windows.net/node/cache","https://asia-east2-service-305111.cloudfunctions.net/nodeapi"],"Data":"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t2DxkxHwxMuihyH2FLNbwxShsaxotnH6vaxkgSvOd0jnhzux6RtSw3Hj2Wx5ByNxoTkxjRuSdMk5jyuxdckwjbubdMk0jxuxdLkxjxu2dnkhjaukmcuokyyqgywldSjhhyul6SNhUyNldSHhfyul5SIhOyNltSFhtyul5SSsfR3FObN2tLuakxv6Kyxo6xwx6bjLkLwadnt6xbHh22uheaIasMtxtb2wzWIaYRNBt2OzjyDliRuSkVuoknu66HNxULjbdny6txu9gWxxUKNxhxumknIndovjdyultyHlgHvhdz2adVxk6RN6ebRatnDnkIHix2uxgxRxaW13ZyNxtTOFtJuYjVRRaH3hjzwkdLQ02cOxjxjZ2ROhjzte2WOxjxDJ22O5jnNh2zOzjyjx2IO5jxwxtVSnjWRxtatn3Sul6xNnUSNltn2nvS2lXRtntSSlaHvndStmSRtntSym0KHhgavnd3teNV1nEy1xJIw5txux3bSLtLtatn26ebEhj2jhwaxa6MNxgbRwwWvadRjB02tz1yumhRESfVEotnu6BHvx7LDbtnt6txx9fWvxdKuxtx3msR2mtSNj6yNlsyR3tRDhkzHaxVukhRH6FbNawnSnsIxit2HxvxxxgWv3dytx3JuB6UtlwVHS2HxhBzNkoLE0icuxdxEZiRuhdzEeiWuxdxEJi2u5dnEhizuzdyExiIu4mxuxkVyngWwxdatn3Sum6HNnUSNntR2nvS2nXHtntSSnaxvndStnSntntSyn0UHhgavnd3teKVunVywxFIS4txux3bSLtLtatn26ebEhj2jhwaxa6MNxgbRwwWvadRtB32uziyulfRkSiVNoint6tHGxtLSb9nt66xj9xWHxtKNx6xj1kRRnOSNjhIu0vy2lXxNxwLS0sVxztyIxwLwodI21dxxy6bjxwRHFH3xxtxtNjKuLt0uOjaRIax3xj2w1dc1nkHO6jztFkxOxj2D0kHO6jcNhkROxjLjxkxO3jRthkaOkjcwotySqjyRntythjyuntyuhvyvndyjhayInBythtySnaovhdytnRotstRyF0bH2gLvadxD6OyRl5xwxNb3LtLua3nS6tbtht22heaEajMjxwbxw6WNagRRBw2vzdytl1RuS0Vuo3nu6fHExtLubBnv67xD9tWtxtKxxfxvmdnuntI3jsS2jtINn6xNxsLR0tVDzkyHxxLuohIH1FxNywbSxsRxFt3HxvxxOg1vId0DVtKuZjxRxa231jcwndHG65aOWjxNx52O0jHj65xOhjztz5yOxjIDn5xOxjVNn5WOxjawntSS1jHRntSt11xtntSH1tntn0SI1xRxnsSy1tHun5SI1OaNhtaPnt3ue5VSnfy3xOINntxQxDbFLOLGaEnw66bjhk2whdataxMHx2buweWIasRtBt22zzyIlYRNStVuoknu6kHExfLEbtnu6Bxv97WDxtKtxtxxmfnvndIujtI3msy25tHNh6zNasVRktRD6kbHaxnunhIHiF2NxwxSxsWx3tyHxvaxOgavJd1jO3nuh6ztkwLH02cxxBxNIonuhizuedWuxixuxdRuYiRu6dyu5iHuhdaukicuodyuqiyummSuhkyymgIwhdyjm3Iuh6yNmUINhtyym1I2hfyxmRItstRSFabv2dLDaPxt6tyy50HHhgzvkdbjzlLGx6bvwGWOatRuJ3LSltytbtL2oeHExjVjwwRx66RNxg2Rww3vxdyjh3zujibExfxuxiHj7tzuFByvx7IDjtIt2tyxlfnvndHuhtz3asV2ktRD66bNasnRntIDik2HxxxuxhWH3FyNxwUSJsJxItbHNvnxhgzvkdLD0ictxtxIIvnxhgzSetWDxkxux4ROYjRu64yO1ixux4VOnhWux4aOn5Sun4HOn4Suo4Rkn6Sjo0H3nBSNotxEntSuovnvndSRo1UxhtaSna3vedVDnPytxtyyx0RHDg1vedVtkKyObULwoJHyxtVui3RS6tbtht22hezEkjLjxwyxh6zNhgMRowyvmdRDYibDkiyux2cEhfnEYtRu6Byvj7RD5tRt3txxxfLv0dVuzty3xsL2otIN16xNysbRxtRDFk3HxxxuNhUHKF1NRwKSlsxxxt2H1vcxngHv6daNW0xtxt2I0vHx6gxShtzDz0yux4nOhkauk4cOojyuq4yOniSuh4yOnhSuh4yOn5Suh4ykn6Sjh0y3nBSNhtyOntSusvRvFdbR21LxatxS6ayvxdRDDO1tetVyk0yHbgLvodHjxlVGiURG6Vbvht2uh3zSktLtxty2hezEhjMjowyxm6RNYgbRkwyvxdcNh0ntYjRu6jyEofykmtxumBIvj7IDxtRtCtMxdf2vxdxuwtM3isy22tLNb6xNhsaRotnD6kaHYx1uph1HlFcNxwRSSs3xjtWH5vyxxg0vxdRjS3Mu56ytxwxHx2LxxBxN5oRuhiaukdcEoiyuqdyEmiSuhdyEmiSuhdyEmiSuhdyEmiIuhmyumkIyhgywmdIjs3RuF6bN2ULNatxH6wySlfxHxtbuL5LIaOnN6tb0ht2uh5aSafM3xObNwtWIaGRwBK2xz5yvl6RjSkVwodnt6xHHx2LubenI6sxt9tW2xzKIxYxNmtnkniINj2Iuj2IuxkRtCtMGdt2Sx9xtw6MjixyH2tLNb6xjhkaRoOnN6haukvy2RX0NGwzSxsRxSt3IjwWw5dy2xd0xx6RjSwMH5Hyxxtxtx1LExtxu5jnRhaa3kjcwody1qhyOljythhyOljyDhhyOljyNhhyOljyDh5ykljyNh5ykljywstRSFjbR2tLta1xE6tyuovxvxdbNLsLxa0n26Ybtht2ShaavadMDxObtwtWya0RHBg2vzdyDlNRuS5VvoCn16tHux3LSbtnt6tx29eWExjKjxwxxm6nNngIRjwovjdyDxjRuCiMudf2uxjxDwiMtityG2tL3b6xNhkaRown26ZaNYtbuRhako4UkxjRkSh3OjkWE51yEx4KEx5RES3Mt51yIxh3Izeb25txuxvLPxMxH2cRHhzaPkdcyotytq5yO50IEh5yE5jINh3yk5iIEh5yO5jyEh1yk5eyHhhyN5hyHssRxF6bN2ULHafx26OyHlvxIx3bxLtLtaknu6ibEh12uhkaNa3MkxibEw5WOajREB12kzeyHlhRNShVHosnx66xNxULHbfn06uxR9OWHxvKIx3xxmtntn2oOj1IkoiyO01HNh3zkaiVEk5RO6jbEa1nkneIHih2NxhxHxsWx36yNxUJHZwTx5sb2O4HPhdzyktLt0icuxixOZ0REhjzNe3WkxixEJ52O5jnEh1zkzeyHxhIN5hxHxsVxn6WNxUaHn0SR3EnRn1Sv3dRjnhSu33Hkn0Su4gRkn4SE4iHEn5Su41aEh1aEnt3SeeVSnsyDxuIt5txHxvbPLuLxafn26dbHhR2NhtaOahMOx0buw2WkahROBk2Ez1yEl4RES5VEo3nt61xIxhLIben26txu9vWPxMK3xwxHmERImfoHjNINntyu43xkxjLO0jVkzhyOxkLEo1IE14xEy5bEx3RtF13IxhxIReT2Kt0uNvJP5Mxxxg2R14cvnwHx6szvFdxtxi2E0jHu64cEhgRkx4LExixE35Ruh1aEk1cEotySqeySnsIDhuytntIHhvyFneyRhjyxnfyxhtytn3yEh0yun4yks5RSF3bk2iLEa5xO6jyE41xkxebHLhLNahnH6sbxh62NhUaya1M2xubvwdWuatRIBe2RzcyHldRPSsVvodnu6txGxHLIbgnH6axQ9sWRx0KHxfx21OxR31Rvndnu5tRIhgzHaaVQksRR60bHafn2nOIRi12vxdxOx5Wu3vyHxgTPVy0RkvyPNjR2hwz1kfL20OcNxhxOA6xNhfz3eNW3xXxHIvLI13RxhkzHzgyvxdIOx0RuFv3H0gnP6yoR1kIH5gSv1dIOlkSu1vIHmgS01gI0nfS21OINo1Su15IS0wHQxMWHkgbPzsMvxdxO5hRuhtzHkhbEzjLRxvbHwZWyaaR2JtLNlhyubtLSoNHPxOVNwhRu66Rjxh20wi3vxdyOh1zujtbSxNxvxOKj9KOBC","Source":0,"PublishVersion":920}