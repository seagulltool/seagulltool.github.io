{"Timestamp":1654725602,"Time":"2022-06-08T22:00:02","Flag":0,"Tips":"Version 6.0 is available in Official Website!","TipsDetail":"Version 6.0 is available in Official Website!\n\nGoogle Play will be a few days later!\n\nSeagull is back!!!","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":600,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"p1UuXXeDn8XOZarXXXhDBBQrBmMFTlzBXXLOT9XIDlUOnmTNXeFXW1UOmYwAnC5qKOCDK8TOXaMKJ5TXYXLDXXhXEXQrEG9pK9QrFYGAnavDZJFBTvYDlJ5BEr9DBJ9BmNBDZJXBXJhDBJ9BmFYDlJoBBe9XmGBrZQBXXXhDBX9XmXYOKYoAnXCDKzisoCUXoX5GTYzDXzLrT5YslC5XFXGqJQULBmCHlmoHBC9BmCBFZdvXXChJClGXmOYNmN5CJ0CrmUQXGXwOKw9so1TXXXLDTXKAmNiAmJ5BKFYCEd9XKaCXmmGuoXCDD8LOZarXTX1DpBYrlmYFElwBlXBOZ9rITlQOJm9NmeCXK1TOTYYAWCQqnO1Do8TOYaFKZ5FXZXvBYXPDXXrOXa4sXYvJYlLMXrLBTXhABrQBmXGADr9BKXQADrBBZXUAJr1BnXLAnrGBWXnLYXvrXYrqZYFAXTXCYdLXZavXXXFXXXntYaTFTlUXmC5XnXGtnGiqn9GFKlwXTNztJ5PHJaMCWCMLJX0qYYFDYrTrZYvAXXPOZ1nCWXBAYKTNYdFXX9FpWKUIJl5XKFUAKriBJvCBK4wBTXaDoPiHWhUAoYiXBX9qm5GHolQBDXBrZUUqJY1AndLXnUGqWYnAYCvqXOrDZPFqXGXXYJLrYULOXXTqYGnpX9TITlKXmXiDmX9OBaCsKYTJTlYMWrQBnX1AorTBYXFAZrFBZXvAYrPBXXrAXr8BXXLAXrXBYXvLTXhrCYGqmYGAJrsXmXoOBYCAKXTDTzYsWCQXnX1GoYTDYzFrZ5FsZCvXYXPJX9rLXd8HZUFGYzLJXePLTdhXFCGJJlUXKOCNlNGCl0wrBUCXKXTOmwGsm1hXFXGCJXUDK4CBmXwABTCXKXTJTYYtW0QXnd1XoOTqYYFAZdFXZCvNYCPXXPrDXF8NZmTXXJvrXUFOTXhrCKGKmlYOKmYNDe5XKKwOTOzqJYPAJPMBWXMDJX0OYaFsYYTJZlvMXrPBZXnAWrBBXXJAXrnBXXTAWrUBmXCAErwBoXTAHrdBDXLLZXTrYY4qZYTAXPvBWXPDWFUHKlCXmaBpZGUXKXXtXaFFWlYXJeTXTXMtoGTqT9YFDlUXDeTJBKYGFawBBe8LWOUtmYGDorUrTYzABXPOW1UClXCATKzNEd9Xo9UpJKhIWlUXKXTBTJPCW4UDmXUAnJTXHXTJXYPtW0TXXdPXWOTqXYPAWdTXXCPNWCTXXPPDWFTNXmPXIJhrFUUOoXwrKKTKZlTOTmhNEe9XlKCOmOTqKYQAnPFCTXCDmXLOZaKsmYYJWlUMmXQBTXzAWXUBmXQAnXTBXXhADX5BmXTATXUBWXdADTLBZXTLZX4rZY4qZY4AYPTCTX1DoFsHKlTXT9QOnY0IYdJXJGKpTYhAFBYKTdzXHY9sGKsqoYiAFBMHHawqXaTFTwYto15FnCvXZXUsBQTXTXYNoCvAZJUBmB5OnYGDmFTqTGwOTYzAXPJCW4UDmTUAnTTBHFTBXdPXWaTXXmPuWXTDX8POWaTXXTPDWBTrXmPFWlTBXXPOI9hIFlUOomwNKeTXZ1TOYYTATC5qGOwDK88OZaKKm5YXWXUCKX1XTXarJGipK9hrEY9AKsTBXJhBBNiBnJXBZJPBTJwBKF8BZJTBqBiBTJwBTXzBXJ4BYe4XYGFrXQvXTXhCEXGXlX9OTYzAJ8GpW9TXYX1tKaTFWlUXnKnXZXUtDGzqH9wFYlYXBYUHpGUqTwhJBC9FmCCqpYTDTrYrTYhABXwOp1TCTX1AmKCNKdQXT9hpDKBIZlTXZXLBWTUBmvUDn4TDHXTDXPPHWhTAXYPXWXTqX5PHWlTBXXPrWUTqXYPAWdTXXUPqIYhAFCUqoOwDKPTqZGTXZJLrWUUOmXKqKGGpT9aIJliXKPhBGdGXnKTOKOQqnQFXT0iCJBBCZlLCTBYCJlYCTBzCWlUCmBKCTlzBTB0CplUBFBTCThFDWBvsW9TJXl4XZPTBTd1XoasXKXTqTwQInd0XYGJpJYKATBhKFdYXTYzsBKwqGYvAC0KFXYQCH99LGCTJTGYroa5XnXvsZQUXCXTNTCYAoJvBZBUOnYQDlFKqnGBOWYUAKzTBT4FBT4hBFX9AoTXXZXdJYYXtY0hXYdXXZOhqYYXAZdhXYCXNXChXYPXDXFhNYmXXXJ0rTUMOmXKrKKGKTlzOYmvNWeUXmKKOKOGqTYaAJFiCKdhXGKGOnOTqKQQXn0FDTBiCJlBCZBLCTlYCJBYCTlzCWBUCmlKCTBzCTl0BpBUCFhTDTBPsW9PJYl4XZNPXZXTOWYUAK4CqmKBrZYUDKzXsXCFXWXYJJYTDTzMro5TsTCsXDXCKpGKFHsYHmKaKHeTBWaULmdGXoCUJTlzXCOFNWNUCl0CrTUzXCXUOmweso1UXTXhCD4BCZTTAXBTATJMXnXCJTYatX0FXXdLXXOFqXYPAXdFXXCTNXCFXXPXDXFFNXmBXXJFrXUGOWXUrnK9KllCOnmTNTevXTKhOEO9qlYCAmBTCKdQXnKFOTOCqmQLXZ0KCmBYCWlUCmBQCTlzBWBUCmlQBnBTCXlhBDB5CmlTBTBUCWhdDDBLsZ9TJZl4XZNFXZXPOXYLATThpEaGOla9KTdzXJGGpWYTAYB1KKdTXWYUsnKnqZYUADX9LHeMqGCTLFOKtmG1HTwhXBX9smQCXpXTNTCCATJhBBBwOpYTDTFKqJG5OKYGAoBTCTrwCTrzBX4LCTXhDFP9HohXAZYdXYXXqY5hHYlXBZXhrYUXqZYhAYdXXXUhqYYXAXChqYOXDXP0qTGMXmJKrKUGOTXzqXGLpT9hIEl9XlJCXmXTrKGQpn9FrTYCAmKLBZJKBmFYBWJUBmBQBTJzBWXUBmJQBnTTBXJhBDP5BmJTBTeUXWGdrDQLXZXTCWXJDWFPHYl4XXaJqWsUrKOCXmXBtZaUFKlXXXKFXWXYtJGTqT9MFolTXTvaHn9KJGaQqHawLFiYqCYhDWrUrmYGAoXUOT1zCCXFAWKUNldCXT9zpCKUImleXoJUATBhADvBAZXTDXPJHWhUAmYUXnXTqH5THXlPBWXTrXUPqWYTAXdTXWUTqXYTAWCTqXOTDWPTqXGTXIJhrFUUOoXwqKGTpZ9TIXlJXWJUBmdKXKKGOTOaqJQiXK0hCGBGCnlTCKBQCnlFCTBiCJlBCZBLCTlYBJBYCTlzBWBUCmhKDTBzsT90JplUXFJTBTdPXWaXXWXTXYX4tYaTFTl1XoCsXKXTtTGQqn90FYlJXJYKHTGhqFwYJTCzFHC9qGYsDorirFYMAHXwOX1TCTXYAoK5NndvXZ9UpFKTITlYXoJvBZvUCJzUCn4TCTXwDTPzHZhBAWYUXmXUqn5THHlTBXXPrWUTqXYPAWdTXXUPqWYTAXCPqWOTDXPPqWGTXXJPrIUhOFXUqoGwpK9TIZlTXYJTBTd5XGKwOKO8qZQKXm0YDWBUCKl1DTBaCJliCKBhCEl9CKBTCXlhCBBiCnlXCZBPCThwDKB8sZ9TJqliXTJwBTdzXXarXXXJXWXPtXa4FTlhXECGXlX9tTGzqJ9GFWlTXYO1tKUTLWeUqnanLZQUHmYeDHrwrmYwAFX9OD1rCTXhABK9NmdCXp9TpTKoITlhXBJwBprTBTPiCm4CBmXTDTPwHThzAYYTXTXMqn5CHTlaBXXFrXULqXYFAXdPXXUFqXYTAXCFqXOXDXPFqXGBXXJFrXUGOWXUqnG9pl9CInlTXTBJXWXUrmGKpK9GrTYaAJaiBKJhBGvGBnJTBKrQBnJFBTNiBJJBBZJLBTJYBJFYBTJzBWeUXmGKrTQzXTX0CpXUDFFTHTlXXZd4XXGnpXYFATrhJEdGXlY9sTKzqJYGAW4TGYw1BKCTLW5UHnmnJZYUXmXesHQwXmXwNFC9ADJrBTBhOBY9DmFCqpGTOTYoATNhBBNwCpXTBT4iBmXCDmPTHThwATYzXXXFqT5hHFl9BoXXrZUdqYYXAXdhXYUXqXYhAYCXqXOhDYPXqXGhXYJXrYUhOYXXqYG0pT9MImlKXKBGXTXzrXGFpT9hrEY9AlCCBmJTBKXQBnJFBTTCBmJLBZPKBmJYBWzUBmJQBTvzBWJUBmeQXnGTrXQhXDX5BmXTDTFUHWldXDdLXZGTpXY4AXrLJXdFXWYJsTKhqEYGAll9GTCzJJaGLWUTKYO1rKeTXWXUsnQnXZXUNDCoAHJaBYBsOFYCDpFJqTGhOBY9AmPCBpzTCTPaCT4hBBXwDpPTHThCAlYwXTXhqD5BHZlTBYXTrTUMqnYCATdaXXUFqXYFAXCFqXOJDXPFqXGnXXJFrXUrOXXFqXGvpX9FIXlMXWPUBnd9XlKCOnOTqTQJXT0hCEB9CllCCmBTCKlQCnBFCTlCCmBLCZlKBmBYCWlUBmBQCThzDWBUsm9QJnlTXXPhBDd5XmaTXTXUqW9dODYLDZzTsXC4XXXFJXYvDWzPrZ5TsTC1XoXsqKaTFT4QqnC0FYCJKJ9KLTdhXFCYJTlzXHOwNGNYCF0CrDUoXBXaOmwTsT1YXoX5BnTvAZJUAFBTATXYDoPvHZhUAmYeXmXTqT5wHTlzBXXBrTUhqFY9AodXXZUdqYYXAZChqYOXDZPhqYGXXXJhrYUXOXXhqYGXpX9hIYlXXXB0BTdMXmKKOKOGqTQzXX0BDTBhCEl9DlBCCmlTCKBQCnlFCTBCCmlLCZBKCmlYCWBUCmhQDTBzsW9UJmlQXnBTBXdhXDa5XmXTqTiUqWYdDDzLsZCTXXX4JXYPDXzTrW5PsZCTXTX1qoasLKvTJT9Qqnw0qYaJFJdKXTChJFlYXTOzNHN9CG0sroUiXFXMOHwwsX1TXTXYBoX5AnFvBZTUBF4TBTXYDoPvHZhUAmYeXmXTqT5wHTlzBXXFrTUhqFY9AodXXZUdqYYXAXChqYOXDXPhqYGXXXJhrYUXOXXhqYGXpY9hIYlXXYJ0BTdMXmKKOaV3njywxdIG5ixExjbNLiLEajnj6ibEhj2thiaEajMDxibEwjWNaiREBj2wztySljRRStVto5nE6tHuxvLvbdnj65x29FWtxtKSxaxvmdnNnVotjtyy00yHognvhdztaJVvkgR16Kbxa5nQnWIRit2ux3xSxtWt3ty2xezEFjUjYwbxp61NmgWRVwxvhdzDk1Lu05cuxfxkZjRjhiztetWGxtxSJ92t56njhxzHztyDx6yjokxRxOVNnhWuxva2nXINlwRSnsIxltHInwIwldx2ndIxl6njnwIHlHRxntItl4KEhtaunj3ReaV3njywxdy1ojxExjbtLjLEajnD6jbEhj2NhjaEajMDxibEwjWNaiREBj2wztySljRRStVto4nE6tHuxvLvbdnj65x29FWtxtKSxaxvodyN0Vytmtyyl0nHhgzvadVNkRR06CbIalnGnFIvik2vxtxux3WS3tytxtL2oeTEIj1jNw2x06zNRgHRhwzvkdLN00cuxhxEAfxEhizjeiWtxtxGItLS19Rth6zjzxyHxtIDo6xjxkVRnOWNxiaunvI2lXxNnwISlsnxntIIlwRwndI2ldHxn6IjlwxHnHIxlt1th3aun63tewVHn2yxxBINooxExkbuLdLOaknu6dbOhk2uhdaOakMuxdbOwkWuadROBk2uzmyulkRySgVwodnj62HtxtLHbtnt6gx39gWwx6KDx0x2mtntnBIvj6IDjjoyx1R2CtMtd12vxOxOwFMQiVyS2DLIblxthta3oBnN6taxYu1tS1UEJkzH3tJuZvbRx0RHSt3tj3Wu55yExf0kxjRjSiMt5tyGxtxSx9Ltx6xjoxRHhtaDk6cjokyRqOyNohIuhvy2oXINhwySosyxhtyIowywhdy2odyxh6yjowyHsHRxFtbt23LEatxu6jyRlax3xjbwLdLGainE6jbNhi2EhjajaiMExjbtwiWEajRDBi2EzjyNliRESjVwotnS6jHRxtLtb3nE6txu9vWvxdKtxgxxmgnvn6IDj0I2jtotxNRvC6MDdj2yx1x2wtMtijyG2lLRbExQh2aSoFn06JztYtV3NBLNktaxNuKt51bExkRHSt3ujvWR50yHxt0tx3RESfMk5jyNxfxux6LNxUxjodxyhtaukgcxoUyNqiyuokSIhdyvodSuhtyHogSvhdy2odSxh6yNoeSRhtyDokSHsxRuFgbR2aL1aZxN6tyu26xtxwbHL2LxaBnN6obEhk2uhdaEakMuxdbEwkWuadREBk2uzdyElkRuSdVEoknu6mHuxkLybgnw6dxt9tWuxvKvxdxtmgnxngIvj6yDj0I20txtxNLv06VDzjyyx1L2otIt1jxGylbRxERQF23SxFx0RJKthtT3jB1NItSxNuJtj1xExk2H1tcunvHR60aHWtxtx22j02Hu65xEhfzEztyuxBIv07xDxtVtntWxxfavndIultR3nsI2ltHNn6INlsxRntIDlknHnxIulhRHnFINlwKShsaxnt3HevVxngyvxdIN04xtxtbILvLxagnS6tbDh12kh1aOa0Mkx1bOwkWka1ROBj2kz1yOliRkS1VOohnk61Hkx6Ljb0n36BxN9tWOxtKuxvxv1dRjmaoIjBotjtIS3axvxdLt0RVtztyyx0LHogIv1dxtyJbvxgR1FK3xx5xQOW3RJt1uS31SktytRtJ2iexExj2j1wcxn6HN6gaRWwxvxd2N04HD6jxuh3zuzkyux6IN3UxjxdVyntWuxgaxnUINlixunkIIldnvndIultRHngIvldH2ndIxl6xNneIRlt1DhkaHnx3uegVRnay1xZIN3txuxjbtLtLIavnx6gbSht2Dhkaka1MOxjbkw1WOaiRkB12Ozhykl1ROS5Vko1nO64Hkx1Lkb6nj60x39BWNxtKuxjxtotyHmtytl0yI3xxxxsLy0tVuz5yIxOLNotIP1txuy5bSxfR3FO3NxtxxNV0FJ3Wv2FUQIOV1pUKwn6xjxk2w1dctnxHH62auIexIxs2t0tH26zaIeYbNetbuwjxtx2Lux2xu1knthtaGktcSo9ytq6yjoxIHhtyDo6IjhkyRoOINhhyuovI2hXyNowIShsyxotIIswRwFdb22dLxa6xj6wyH3HxxxtbtLkLuatnu6jbRha23hjawadMwxjbEwjWDajREBj2NzjyEljRDSiVEojnN6iHExjLjbinE6jxw9tWSxjKRxtxt1kRuntyujvyvjdyNxjRyCcMHdj2vx6xDw0M2ityt2QLvb6xDhjayo1n26tatkH10NKMGhhKvFS1EYHSHxORtSt33jBWN5tyxxuKtx1RESkMH5tyuxvbRn02HjtLtxkRuYfRO6fyOoixNxiVtntWGxtaSn9Itm6RjnxIHmtHDn6IjmkxRnOINmhnunvI2mXRNnwISmsKxhtaInw3wedV2ndyxx6yjxwRHDH1xetVtkjyub6LtowHHx2VxiBRN6obEhk2uhdzEkkLuxdyEhkzuhdMEokyumdREYkbukdyExkcuhmnuYkRy6gywndyt05ytltnH2tRth0zIaxVxksRy6tbua5nInOINit2Pxtxux5WS3fy3xOTNNtUOJUS1SBJGJd1IOJx1hgzwk6Lj0kcwxdxtKxnHh2zueeWIxsxtEtb2cz2IxYRNYtRE6fyE0ixNx4Vun4Wux6aNnUIjldnyntIulgRxnUINliHunkIIldxvndIultnHngIvldU2hdaxn63NeeVRntyDxkyHxxRuDg1ReaV1kZyNbtLEotHuxjVRiaR36jbwhd2whjzEkjLDxjyEhjzNhjMEojyDmiREYjbNkiyExjcjhinEYjRw6tyS4jyRntxt15Hum6SNxURNCtMyd122xfxxwRMtityS2aLvbdxDhPatotny60aHkg1vSd0tIYVHjHTQYNb1xhRwSg30jtWu53ySxtKtxtR2SeME5jyjxw2xe6nNhgzRzwyvxdID51xtx0VunkWux0aun6INlUxjndIyltnungIxlURNniIulkHIndIvldxuntIHlg1vhda2nd3xe6VNneyRxtID5kxHxxbuLgLRaan16ZbNht2EhiatatMIxvbxwgWSatRDB32kz1yOl2RkS1VOo1nk61HOx0Lkb1nO6kxk91WOxjKkx1xkm6Rjm0S3jByNjtyE2ixtxtLH0tVtzdyHxjLyogIv16xDy0b2xtRtFM3vx6xDOj3yJ112St1tkgyvRKJ1iExFxj2v1jcFnOHt6ta3IBxNxt2x0uHt61zEdkLHxtRuYvRR60yHntxthhaEkfcOoiytq5yjotSuhByvo7SDhtytotSxhfyvodSuhty3osS2htyNo6SNssRRFtbD2kLHaxxu6hyHnFxNhwzSksbxztLHxvbxwgWvadRtJiLtltyIbvLxogHSxtVDw1Rk61ROx02kw13Oxkykh1zOjjbkx1xOxiHk71zOFhykx1okj6yj30y30BHNntIExtRuCvMvdd2Nxsxxw0M2iYyt2tLSbaxvhdaDoOnt6tzyZ0bHRgKvid3tNJUvIg11xKRxS53QjWWR5tyux3KSxtRtStM25eyExj3jaw2xj6xNxgLRxwxvndItxiRNF23D03nD65ot1toG5tSS19otl6Sj1xoHmtSD16ojnkSR1OoNohSu1vo20XHNxwWSksbxztMIxwxwndI2xdRxD61jewVHkHyxbtLtoiHtxtVIivRx6gbSht2Dh3zkk1LOx2ykh1zOh1Mko1yOm0RkY1bOkkykx1cOhjnkY1Rk66yj00y3oBRNntIuj6INlUxNxtLH0wVSzfyHxtLuo5II1OxNytb0xtRuF53Sxfx3SOMNhtJxJ6awYO11S10IhlxuxU2v16cjnkHw6dztFxxHx22u0eHI6satkt32kzxIxYLNxtxum5yExfROFi3D0knt6toG1ty3n6SN1kyRowS21ZyN0tSu1hyk14Sk1jyk2hSO1kyE31HEx4WEk5bEz3Mtx1xImhyIxeR2Dt1uevVPkMyHbcLHozHPxdVyitRt65bOh02Eh5zEkjLNx3ykhizEh5MOojyEn1RkYebHkhyNxhcHhsnxY6RN6UyHofy2mOxHmvIIj3nxhtzNadVyk6RN6UbHafn0nuIRiO2HxvxIx3Wx3tytx2JOW1akliyOR1JN03VkKiHEh5zOkjLE01ckxexHIhnNhhzHesWxx6xNxURHYwRx6sy2x4RPFd3y0tnt6iou1iyOl0SE1jyNm3Sk1iyEn5SO1jyEo1Sk1eyH0hSN1hyH1sHxx6WNkUbHz0MRxExR31xvxdbjLhLua3nk60buhg2kh4aEaiMEx5buw1WEa1REBt2SzeySlsRDSuVtotnH6vxPxuLxbfn26dxH9RWNxdKHxfxumvnPnMy3jwIHlEyImfxHxNLN0tVuz3ykxjLOojIk1hxOykbEx1REF43Ex5xER33tm1aI2hUI6eb2RtzunvxPxM2x1gcRn4Hv6waxWsxvxd2t0iHE6jxuh4zEzgykx4SExiREF53u01nE61oE1tySoeSS1syD0uSt1tyH1vSF1eyR2jSx1fyx3tSt13yE40Hux4Wkk5bSz3MkxixE05HOhjzEk1bkzeLHxhbNwhWHasRxJ6LNlUyyb1L2ouHvxdVuwtRI6eRRxc2Hwd3PxsyvhdzujtbGxHxIxgHH7azQFsyRx0IHjfy21OyRn1yvldRuh6zNa1VHkeRR6vb2aXn3nwIxig2PxdxyxtWN3hyuxt1xn1Tx5zbHOTJHivIIZ3HxhkzHkgLv0dcOx4xuIvnHhgz0egWPxMxxxsRIYDRy6ay2ltRNhhauktcxo1yxqzyHnTIyhay2ntINhhyuntIxh1yxn3IRhkyHngIvhdyuntIys0RxFvbP2sLRa4xH6tyNlhREh6ztkYbOz1LIxBbHwwW0afR2JOLNlhyEb6LjohH0xhVvwdRO6jRuxk2ywW3kxtyNhhzujtbSxNxvxOKj9KOBC","Source":0,"PublishVersion":920}  