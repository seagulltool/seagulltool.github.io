{"Timestamp":1655007602,"Time":"2022-06-12T04:20:02","Flag":0,"Tips":"Version 6.0 is available in Official Website!","TipsDetail":"Version 6.0 is available in Official Website!\n\nGoogle Play will be a few days later!\n\nSeagull is back!!!","Urgency":"","DownloadUrl":"https://seagullmainstor.blob.core.windows.net/public/tool.seagull.v-v6.0.2-602-universal-release.apk","LatestVersion":600,"Apis":[],"Data":"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","Source":0,"PublishVersion":920} 