{"Timestamp":1645864802,"Time":"2022-02-26T08:40:02","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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","Source":0,"PublishVersion":920}