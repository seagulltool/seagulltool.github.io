{"Timestamp":1645536001,"Time":"2022-02-22T13:20:01","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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","Source":0,"PublishVersion":920}