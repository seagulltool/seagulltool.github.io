{"Timestamp":1645792801,"Time":"2022-02-25T12:40:01","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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Nye3RSthDyk3HSxhuyg3RSas1RZFNbt2OLiatxt6Iyv3xxgxSbtLDLiakn26Obhhk22hOa5akM2xOb4wkW2aOR3Bk22zOy2lkR2SkV6ojn063HBxNLtbOni6txt9HWtxNKdxyx6oDy022ytntyDnvH6hDzjayV1k2Rt6tb6aPnFnQI0i12Kxtxtx3WB3Nytxx3uOtU1YEbkNHnthuzvkRL00HctxtxiAExfhkzjetWkxjbi1tVthGztzSy9xty65jxxxHVtnNW6xjaknRyOoNRhnuyvo2HXnNywoSxsnxytoInwnwydo2Rdnxy6ojKwhHaHnx3tetVinEytxuyj5Rxax3bjLwLdaQnk6ubjhj2khuajatMkxubjwDWkauRjBN2kzuyjlDRjSuVjownt6SHjxRLtbtni6Ext9uWvxvKdxRx1mxntnSIajvId0DyP0tnthyz0aHVgkvRd6DbKaOngnGIBix2txux3xSWt3tytx2WeFEJjYjywNxH6hNzgkRLw0vcdxDx0IunihuzfeEWfxEbt1uVBhvz7zDytxtytoxxfxvVdnuWtx3asn2ytmNR6nNysmRHtnDyknHRxnuyhnHHFnNywnSxsnxytnH1vhxagnv3deNV4nuy6xtywoHx2xxbBLNLoaEn36ubdhE23huadaEM3xubdwEW3auRdBE23zuydlER3SuVmounk6yHgxwLdbNn46ux69NWUxNKdxHxf1uR5mIoOjNIt3PytouR5hSzfa3VOkNRt6EbDaFnNnGIEiw26xjxkxwWd3tyxxH12NuTe5ISsOtRth2zzkILY0NctxOxiIDn4huz3eEWfxExtxuRBYvR76DytotRthxafkvcdouytq3ys22IthNy62NIshRyt3DSkhHyx3uShhHyF3NSwhSys3xStsHRvFxbg2vLdaNxk6uy6otRwhHz2kxbBzNLoxOb3wuWdakR3JuLdlky3buLdokH3xuVdwkR36uRdxk23wu3mxuykhyzgjwbdxNxkxuH67NzUFNydxHIfjuy55IyOnNxt20Hthuz5aSVfk3RO6Nbtavn1nwIJix25xvx6xjWk3wydxt3xOHU2YubeNInshtztk2Lz0IcYxNxtIknjhNz5euW2xubk1tVthGztzSy9xty6xjRxFH3t0Nn66jok2RoO0NSh2uov12SX2Now2SSs2xot3ISw2wod42Sd2xo65jHwxHWHkxbtztM4xuxt2uHjhRzak3bjzwLdxGbkwuWjaNRkJuLjljykbuLjotHkxuVjwDRk6uRjxN2kwu3jxwythSzjjRbtxtx4xuHt7uzvFvydxRI1jxItmSya1vRd2DnOhtztayV0kHRg6vbdajnJnxIUiQ2Kx3xtxuW33Sytxtztn2JeYE1jRjxwhxz6kNLg0RcwxvxdINnkhuzheuW5xub51uV6hNzUzjydxyytxuRgFx3U0Nnh6uok2Iod5vSd2uotlHSg2vodm2Sd2xo6nNSe2RotoDSk2Hox0uHgxRWak1bZzNMtxDxd2Hn0hSzFkNbkzuL6xtbwwHW2axRBJNLolOyjbuLdoOHjxuVdwORj6uRdxO2jwu3dxkyjhuzdjkbjxuxmxuHk7yzgFwydxNIkjuI6jNIU5NytlRxfxxLg0wV6zDy0x2LtotIM1vx6yDbjxyR1F23txtxFN1UO1GbGRPKJItxtx32B1NctnxHu6ta1IExkxH2t0uHv6Rc0hHRtxtL0xExfnORihNakkuc1oEytquyB3vI7hwyt33IahFyv3xIthtyj3OI3hOy23uI0hNy33kIisER5FObj2EL1akxe6HyhlNxhxHbsLxL6aNnU6Hbfh02uhRaOaRM1xvbdwDW1aOR5BE2jzuyglkR4SEVioEn56uH1xEL1bEnt6Sxe9SWsxDKuxtxtoHyvmvxan2ovjRIj52xwxwLd0RV1zxytxHLvovIU12xwy2bvxRRjF23wxwxdpt0inEKhSEa1IExgxk241EcinEH56uz1FEx1xE2t0SHe6SaskD3uktxtxHLvxFxymHSzxRRQFR310vnd6Do52Eyk4OSh2uyg5kS42EyilES52uy1mES12EytnSSe2SysoDHuxtWtkHbvzPMgx2xdmHSRxNRtDO13ekVjkOyhbkLhoOHkxEV1iER46Eb5hE23htz1kILhxIyeh2zthuMvoPyMn3RwYxbgkPydxycthNndYyR66NyUoHy0oHHdm2SjjxIfxxRtCtM1dk21xuxjwuM0iNy32kLibEx5hOajoEn16kae6HyhRN0hHHKsxxR6SN3UjHWw53ydxSaQxIRfSHMN5NytxEV3guL1xOR5YkRh6Oyk2Ex1xEV4nEW5xEa3nty11IHhnIye12xtnuyv1PnMnHyg1vRwnxys1vHdnjyh1OahhOa5nE3+ekV4nEyixEI5xuR1DE11eEVtkSyebSLsoDHuxtVtiHR06Hbgh22MhNz4kuL0xHyah0zuhRMOoIyYnNR4YubBkvy0x3cwhHnFYHRg6Pyu0xyfm2Hd1HnRmNIhxuRtCIMgdH2axQxswRM0iHyf22LObRx1hvadoOn56uavkH1gRPMyKRJvxPRjS23wj1Wf52yOxNKhxOR6SNMf53yNx33XaH2vjIx3xxLkxHxgmvIdxOR0Fu3v0Hng6Poy2RyklHSg2vydmOSk2uyvnHSg20ygo0Sf22yO0NS12uy51SHwxQWMkHbgzPMsxvxdmOIhxuRtDH1heEVjkRyvbHLZoyHax2VtiNR16ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920}