{"Timestamp":1622457601,"Time":"2021-05-31T10:40:01","Flag":0,"Tips":"Tips","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super mode\n\n#. Change mode should be done before connected\n\n#. Enjoy yourself, any issue can be reported by About->Report Issue!\n#. If this app is helpful for you, please rate us 5 ※（star） in Google Play, thanks!","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":520,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east2-apiserviceproj3.cloudfunctions.net/api4","http://139.224.23.234:7100/api/main","http://39.96.64.111:7100/api/main"],"Data":"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","Source":0,"PublishVersion":920}  