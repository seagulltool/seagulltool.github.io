{"Timestamp":1647439201,"Time":"2022-03-16T14:00:01","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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zWIxYxNJt2E5fnOhjztziyuxkyt1txGxtVSn9Wtx6ajmxoHltxDm6ojlknRmOoNlhRumvo2lXHNmwoSlsxxmtoIlw1whda2nd3xe6VjnwyHxHyx1txtx4buL6LtawnH62bxhB2NhoaOakMExdbOwkWEadREBj2EzdyE3jRESdVEojnE6dHExjLEbmnu6kxy9gWwxdKNx2xtmtnHmtItjgI3jgyw26xDx0L20tVtzByvx6LDojIy11x2ytbtxURwF33Pxfx0OKJtntz3NBUNYtxxxu2t11cEnkHH6tzuFvxRx02H0tHt64auki3EkfxkxjLjxixtntoGxtRSF93t06nj6xoHotyD36SjokyR4OSNohyu5vS2oXyNlwSSosyxmtSIowywndH2xdWxk6bjzwMHxHxxntotx2RuD61tewVHk2yxbBLNooHOxkVEidRO6kbEhd2OhkzEkdLOxkyEhdzOhkMEodyOmkREYmbukkyyxgcwhdntYjRt6tyHjtotjgI3jgIw46xDx0L20tVtzByvx6LDojIy11x2ytbtxgR1FR3GxExGRN1thta3KB1N5txxxu2t11cEnkHH6tzuHvxRx02H0tHt62aua23uh2xExfLExtxumBovx7RDFt3t0tnx6fovodyu3tS3osy24tSNo6yN5sSRotoDlkSHoxoumhSHoFoNnwHSxsWxktbHzvMxxgxvmdoNxjRuD61tewVHk2yxbBLNooHExkVEidRE6kbEhd2EhkzEkdLExkyEhdzEhkMEodyEmkREYmbukkyyxgcwhdnNYjRu66yNoUyNntHI3fyH0EHthtzSaaVvkdRD6Mbtatnyn0IHig2vxdxjxJWO35ywxNzvRtau53SSNtnthtz2keLE0jcjxwxxA6xNhgzRewWvxdxNIjLu1jRuh1zuzkytxtIGmtxSx9Vtn6WjxxaHmtoNm6RjmkoRmOHNmhoumvx2mXoNmwnSmsoxmtRImwowmdK2hdaxn63jewVHnHyxxtItm1xuxtbuLjLRaan36jbwhd21hjakaiMtxjbkwiWDajRkBi2NzjykliRDSiVkoinN6iHkxiLwbtnS6jxR9tWtx1Kuxtxu1vRvndItjgIH4jyv36RDh0z2atVtkERw66bDajnyn1I2it2txFxGxFWP3dyvxlztRtU3ZBVNptRxhuztk1LE0kcHxtxuIvnRh0zHetWtx1xuxfREYiRN6iyu30Ruh6aNkUcjodyyqtIuogIxhUINohIuhkIIodyvhdIuotyHhgIvody2hdIxo6yNseRRFtbD2kLHaxxu6gyR3aR1hZzNktbEztLuxjbRwaW3ajRwJdL1ljykbiLtojHkxiVDwjRk6iRNxj2kwi3DxiykhizNjibkxixwxtHS7jzRFtytx5Iuj6yNnUyN1ty24vR2hXztatVSkaRv6dbtaSntntIyi02HxgxvxdWN3lyRxVzQON1vItyuN3nShtztktL20ecExjxjIwnxh6zNegWRxwxvxdRDY1RN63yu4hRuhkauk6cNoUyjqdIyotSuhgIxoUSNhhIuokSIhdIvodSuhtIHogSvhdI2odSxs6RNFebR2tLDakxH6xyu4gRRhaz1kZbNztLExtbuwjWRaaR3JjLwldywbkLuoiHDxkVuwiRN6kRuxi2jwk3uxiythkzujibDxkxuxiHw7tzSFjyRxtItjkyu56yNlURNntSIxjRRCtMud52IxOxNwtMwityu25LSbfx3hOaNotnu6faPJKb1NgLw16zjxkRwSd3tjxWH52yuxe0IxsRtStM25zyIxYxNxtLExfxuniStxkRuF13u06nN6Uojodyy0tSuogyx1USNohyu2kSIodyv3dSuotyH4gSvody25dHxx6WNkebRztMDxkxHnxSuxgRRDa11eZVNktyObjLtotHIxvVxigRS6tbDh32khkzOk2LkxkyOh1zkhkMOo0ykmkROYkbkkkyOxjckhknkY6Rj60y3oByNotROnjStjtIH4txtx0LI0xVxzsyyxtLuo5II1OxNytbPxtRuF53Sxfx3RO1NhtayKe1v5Kxxx52v16cjnkHw6dztFxxHx22u0eHI6satkt32kzxIxYLNxtxOmjotx3RjF23j0tnu6Bovo7yD3tStotyx4fSvodyu5tS3oso2ltSNo6oNmsSRotoDnkHHxxWukhbHzFMNxwxSmsoxxtRHDv1xegVvkdyDbiLuo6HtxwVHi2Rx6BbNho2uhkzEkdLuxkyEhdzuhkMEodyunkREYdbEkkyExdcEhknEYmRu6kyyogywmdnDniSuj6yNlUxNxtLy01V2zfyxxRLtotIS1axvydbDxPRtFt3yx0xHOgTvGdTNSl1RYVxQxN2v1tcun3HS6tztFtx2xe2E0jHj6waxk63NkgxRxwLvxdxDniSux4RuFf3u0inj6touoBovm7SDototntSxofovodSuoto30sS2otoN16SNosoR2tHDxkWHkxbuzhMHxFxNnwSSxsRxDt1HevVxkgyvbdLto1HtxtVIivRx6gbSht2DhkzkkkLOxjykhkzOhiMkokyOnhRkYkbOk5ykxkcOh4nkYkRk66yj00y34BRN4txEotRuhvzvadVNkjRy6cbHajnvn6IDi022xtxtxQWv36yDxjKyJ102Yt1tOFHGhFzPkdLv0lctxtx3KBnNhtzxeuWtx1xEEkbHct2uxvRRY0RH6tyt0jxuxhVDn2WjxtaumBov27RDmtot2tHxmfov2dxumto32sn2mtoD26RNmsoR2tKDhkaHnx3uehVHnFyNxwoSxsRxDt1HevVxkgyvbdLNo4Hux6VtiwRH62bxhB2NhozukkLExdyuhkzEhdMuokyEndRuYkbEkdyuxkcEhdnEYkRE6myu0kyymgnwmdyNj4Sux6RNCUMNdt2HxwxSwfMHityu25LIbOxNhta0otnu65aSIfy3ROaNHtWSx0RFSN3RjEWv56yjxkKwxdRtSxMH52yuxe3Ias2tjtx2xzLIxYxN0txOhiajk4cuojyEqfIkntIuhBIvn7IwhtI3naIFhvIxntythjIOn3yOh2Iun0yNs3RkFibE25LOajxE61yknexHxhbNLhLHasnx66bNhU2Hhfa0auMRxObRw1WvadRDB12Oz5yEljRuSgVko4nE6ixEx5Lub1nE61xE9tWSxeKSxsxD1uxt0txHnvIvjao2xvRRCjM2dw2wxdxRw1MxityH2vLvbUx2hwa2ovnR6ja2YwywNdatii0ExhRES13EjgWk54yExiKEx5RuS1ME51yExt3Sae2SjsxDxuLtxtxH3vRFhyaHkzcRoQyRq1IvndSDh5IEnkSOhhIungSkh4IEniSEh5Iun1SEh1IEntSSseRSFsbD2uLtatxH6vyP4gx2xdbHLRLNatnO63bkhj2OhhakahMOxkbEw1WEa4REB52Ez3ytl1RIShVIoen26txuxvLPbMn36wxx9gWPxdKyxtxNmdSyj6yNjUyH50yHmdx2hjzxafVxktRt61bka1nunjIui02Nx3xkxiWE35yOxjcEC1akZeSHShHNhhzHksLx06cNxUxHKwn3hdzSeQWIxfxHLNMNctLEe3Huh1zOz5ykxhIOnkxEx1VEn4WEx5aEm3ot11RImhoI1eH2mtou2vRPmMoH2gHvmwox2sxvmdoj2h1OhhaOn53Ee+Vkn4yExiIEn5xux1bEL1LEatnS6ebShs2DhuatatMHx0bHwgW2aMRNB42uz0yHlaR0SuVRoOnI6YxNx4LubBnv60x39wWHxFKHxgxPouRxnfI2jdIHnRyNnhxuhtzIagVHkaRQ6sbRa0nHnfI2iO2Rx1xvxdWO35yuxvVHVg1P5yyRSvHPhjz2kwL10fc2xOxNKhnOh6zNefW3xNx3EXbHcv2Ix3RxYkRH6gyvndxOh0aukvcHogyPqyIRnkIHhgIvndIOhkIunvIHhgI0ngI0hfI2nOINh1Iuo5SSswRQFMbH2gLPasxv6dyOnhxuhtzHkhbEzjLRxvbHwZWyaaR2JtLNl1yubtLSoNHPxOVNwhRu66Rjxh20wi3vxdyOh1zujtbSxNxvxOKj9KOBC","Source":0,"PublishVersion":920} 