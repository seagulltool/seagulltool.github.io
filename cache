{"Timestamp":1626246001,"Time":"2021-07-14T07:00:01","Flag":0,"Tips":"Tips","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super mode\n\n#. Change mode should be done before connected\n\n#. Enjoy yourself, any issue can be reported by About->Report Issue!\n#. If this app is helpful for you, please rate us 5 ※（star） in Google Play, thanks!","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":520,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","http://139.224.23.234:7100/api/main","http://39.96.64.111:7100/api/main"],"Data":"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ux0xuV6nNWUxjadoyotluxgoxoUlNnhouoklIRdovodluHtoHogmvRdo2odmxK6hNaenR3teDVknHyxxuyg1Rxax1bZLNLtauni6tbthI2vhxagaSMtxDbhwOWkaOR5BO2kzOy4lORkSOV3oOnk6OH2xOLkbOn16Oxk9kW6xjK0x3xBmNnt1uHimtStjHStxNRdCyM6dD20x2xtwtMEiwy62DLjbyx1h2atotng6vzBlRbFOwLJGtatx3RBSN3tjxWu5ty1xEKkxHRtSuMv5Ry0jHLthtR3YERf6Eyf2OxfxuV6nNWUxjadoyot4uRgoxoU4NHhouok4Ixdovod4untoHog4vRdo2od4xK6hNaenR3teDVknHyxxuSgxRRaD11ZeNVtkEyibtLtoIHvxxVgiSRt6Db3hO2khOz2kOLkxOy1hOzkhOM0oOykmORkYObkkOyjxOckhkn6YjR063yB3NHt0EHintytjHytmNxdxyL60DV0z2ytxtLEowI61Dxjyyb1x2RtFt35xvxfpHaCkFMlFtJt63xBxN2t1xcuntH16EzkFHxtxu2v0RH06Hatkt3hkExfxOLixtxjnNIhxuR6FN3U0jnd6yotouyg4xSUoNyh5uSkoIydlvSdouytmHSgovydn2Sdoxy6oNHexRWtkDbkzHMxxuxgnRIax1RZDN1teOViktytbILvoxHgxSVtiDR56kbkhO24hkzkkOL3xkykhOz2hkMkoOy1mkRkYOb0kkykxkc6hjn0Y3RB6NytoOyiotRtnHotjtyg1RxAxtLt0SVazvydxjLGotIt1yx0yHbgxvRdFj3Kx1xERF1JKSatJuU36Sxtxt2t12cenEHj6jzwFxx6xN2g0RHw6vadkt3hkux5xuL5xExfnEStxuRBFv370Dnt6totoxof2vSdouot33Sso2ot4NS6oNos5RStoDoklHSxouohmHHFxNWwkSbszxMtxHxvnxSgxvRdDN14euV6ktywbHL2oxHBxNVoikR46kbdhk24hkzdkkL4xkydhkz4hkMdoky4mkRdYkb4kkymxuckhyngYwRd6Ny4nuy65NHU5NydmHxfxuL50IVOzNytxFLtouI51Sxfy3bOxNRtFF3kx3xNSRTgiv36OjKklwxdxt2x1Hc2nuHe6IzsFtxtx22z0IHY6NatkO3ikjx1xuL0xExf0EHthuaBkvc7oDytqtot3xIfhvod3uIth3os32IthNo63NIshRot3DIkhHox3uIhsHRFFNbw2SLsaxxt6HyvmxxgxvbdLNLiatnt6Ibvhx2ghSataDM1xObkwOW0aORkBO2kzOyklORjSOVkoOni6OHkxOLhbOnk6kx69jW0x3KBxNxtmEntmuyvjvydnRy1nxHthSzaavVdkDRU6tbtayn0nHIgiv2dxtxKxuWF3GyFxPztCuU3JSVtNtxth2zekELj0jcwxxx6ANxghRzwevWdxNxiINL51tR0huz0zuy6xNIU5jxdxyVtnuWgxxaUoNoh3unkoIod3vRdouot3HHgovod42Rdoxo64NHeoRot4DakhHaxnu3geRVan1yZxNIt5kxtxubjLRLaa3nj6wbdhw25hkakaDM5xkbkwNW5akRkBD24zkyklNR4SkVkojn46kHkxwLtbSnj6Rxt9tW2xuK6xNxUmNnt12nvm2yXjtItxSRaCvMddt2SxtxtwyM0iHyg2vLdbtxNhxagoGnS6EatYuy3pS0totWtx2ReSE3jjjWw5xy6xN0gxRRwSvMd5ty3jtL0huR3YERf6kytmuxBxvV7nDWtxtatoxof3vRdouot33Hso2ot3Nx6oNos3RntoDok3HRxouoh3HKFhNawnS3sexVtnHyvxxIgxvRdDt11euV6ktywbHL2oxHBxNVoikR46kbdhk24hkzdkkL4xkydhuz4hkMdouy4mkRdYub4kkymxuckhyngYwRd6ty1ouy61NRUmNSdjHIf4ux5xILO0NVtzwytxuL5oSIf13xOyNbtxvRdFw3lxuxgSvM6njzkjwUdYtxxxH221ucenIHs6tatW2xzxI2Y0NHt6Exihjzkzuy2xuIk4ux6xNVUnjWdxyatouog3xHUoNoh3uxkoIod3vndouot3HRgovod32Hdoxo63NaehRatnD3keHVxnuygxRIa41xZxNbtLOLiatnt6Ibvhx2ghSataDM5xEbkwOW4aERkBO23zEyklOR2SEVkoOn16EHkxOL0bEnk6kx69jW0x3KBxNxtmOoijtStjHItotyk1xRshwz6aDV0k2Rt6tbDavn6nDIjiy21x2xtxtWE3wyYxILhjwJOZt1tR3nBhNztkxLu0tc1xExkIHnthuzveRW0xHxtxtR0YERf6kyi1NR4hua1kuc6oNyUqjod0yothuog0xoUhNoh0uokhIod0vodhuot0Hoghvod02odsxR6FNbe2RLtaDxk6Hyx1uRghRzak1bZzNLtxubiwtWtaIRvJxLglSytbDL0oOHkxOVkwORk6ORjxO2kwO3ixOykhOzhjObkxOx5xOHk7kz6Fjy0x3IBjNytnuyi4tytnHnthNzdayV6kDR062btatnQnvI6iD2jxyx1x2Wt3tygxwzYBS0j5wVlStHth3zBkNLt0xcuxtx1KEnkhHzteuWvxRx0EHbtct21xERfYORi6jy1nun1hua6kNcUojydqyot4uIghxoU4NIhhuok4IIdhvod4uIthHog4vIdh2od4xI6sNReFRbt2DLkaHxx6uygnRnah1zZkNbtzuLixtbtwIWvaxRgJSLtlDykbuLkoOHjxuVkwORi6uRkxO2hwu3kxOy5huzkjOb4xuxkxkH67jz0F3yBxNotjuyi1tyt4Hyt5tR0hIzxaxVskyRt6ub5aInOnNItiP2txux5xSWf33yOxNMtnFKi5IylN1RUhvz6kjLk0wcdxtxxKHn2huzeeIWsxtxtE2bzcI2YxNRtYuRi6Dyi5uR4huakktctoGytqSo91tS6hjox1HIthNo61jIkhRoO1NIhhuov12IXhNow1SIssxRtFIbw2wLda2xd6xy65jRwhHzHkxbtztLhxub6wtWwaHR2JxLBlNyobOL3okHdxOV3wkRd6OR3xk2dwO33xkydhEz2jkbdxEx2xkHm7uzkFyygxwIdjNS4jtItlHytmtxdxHLj0yVgzvy6xDL0o2It1txMyvb6xDRjFy31x2xtRtMFGGUSVQUC50xNxt2t13cBnNHt6xauItx1xE2k0HHt6uzvnRL0kHxthtzhzuy0xuy5xuR5Fu360NnU6jodoyotouSgoxoU0NShouok1ISdovod2uStoHog3vSdo2od4xH6xNWekRbtzDMkxHxxnuHghRzak1bZzNLtxubiwtWtaIRvJxLglSytbDLkokHixOVjwkRi6Onixk2iwO3hxkyihOz5jubixOx4xuHi7kz6Fjy0x3IBjNytnuyi0txt4HxthtzdaHVjkyRg6vb6aDn0n2Itit2Mxvx6xDWj3yy1x2UtNtJFIFKFNyHkhGzJktLt03cBxNxtKxnuhtz1eEWkxHxtEubvcR20xHRtYtRk6Eyf2ExixtV5njWtxuaBovo7lwHto3oamFRvoxotmtHjoOo3mOx2ouo0mNn3okoimEU5hOajnE31ekVenHyhxNShxHRsDx16eNVUkHyfb0LuoRHOxRV1ivRd6Db1hO25hEzjkuLgxky4hEzihEM5ouy1mER1YEbtkSyexScshDnuYtRt6Hyv0vya22yvmRxjn2ywxwRdCRM1dx2txHxvwvMUi2yw22LvbRxjh2awownd6tziYEyhRE31jETgxkR4SE3ijEW55uy1xEK1xERtSSMe5SysxD3uztbt5HxvxFLyxHxznRyQxRR1Fv3d0Dn56EokoOSh0uSgokS41ESioES52uS1oES13EStoSSe4SSsoDSu5tHtxHWvkPbgz2MdxHxRnNytxOR3Dk1jeOVhkkyhbOLkoEH1xEV4iER56Eb3ht21hIzhkILex2ythuzvhPMMo3ywnxRgYPbdkyytxNcdhyn6YNRU6Hy0oHydo2RjnxofjxotxtR1CkM1du2jxux0wNM3ikyi2EL5bOxjhEa1okne6Hah5NyhpHasIxL6xNRUSH3wj3Wd5SyQxIafxHRNSNMt5Ey3xuV1gOL5xkRhYORk6Ey14Ex4xEV5nEW3xta1oIoh0IHeo2ot0uxvoPoM0Hngovow0xRsovod0jHhoOoh1OU5hEa+nk34eEVinEy5xuo1xER1DE1teSVekSysbDLuotHtxHV0iHRg62bMhN22huz0kHLax0yuhRzOhIMYoNy4nuRBYvb0k3ywxHcFhHngYPRu6xyf42yd3HnRmNohjuStxIRgCHMadQ2sxRx0wHMfi2yO2RL1bvxdhOa5ounv6Hzg6PVyNRJvKPTjx2RwS13fj2WO5NyhxOa6xNRfS3MN53yXxHVvgIL3xxRkYHRg6vyd2Ox0xuVvnHWgxPayoRokmHRgovodmOHkouovmHxgo0ogm0nfo2oOmNR1ouo5mSKwhQaMnH3gePVsnvydxOShxuRtDH1heEVjkRyvbHLZoyHax2VtiNRh6ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920} 