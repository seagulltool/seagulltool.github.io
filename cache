{"Timestamp":1614955202,"Time":"2021-03-05T14:40:02","Flag":0,"Tips":"Tips","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super mode\n\n#. Change mode should be done before connected\n\n#. Enjoy yourself, any issue can be reported by About->Report Issue!\n#. If this app is helpful for you, please rate us 5 ※（star） in Google Play, thanks!","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":520,"Apis":["http://3.106.134.198:7100/api/main","https://213c59dc048e.blob.core.windows.net/node/cache","https://asia-east2-service-305111.cloudfunctions.net/nodeapi"],"Data":"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uRth3zsa2VtkDR66NbsaRntnDIkiH2xxuxhxHWF3NywxSzsOxKtIHbvNxnghvzdkDLh0uc6xtxwKHn2hxzBeNWoxux2EuVdkux2xuLdxux2nuIdxuR2Fu3d0un26uodluS2ouSmluSk0ySglwSd1DShluS62NSUlNSt3HSfl2Sj4xHtxuW5kIbOzNMtxGxtnuI5xSRfD31OeNVtkHyEbPLKoOHhxwV6ijRk6wbdht2xhHz2kuLexIyshtzth2MzoIyYlNRtYObjkjyixuc2hunfYERt6uyB4vy74DntntStjxIflvxdxuLt03Vsz2ytxjL6oNIs1RxtyDbkxHRxFu3hxHxFNNTwJS3sOxatkHxvxx2g1vcdnjH46uz6FtxwxH220xHB6NaokO3hkuxdxkLhxuxdmkShxuRdFk3h0und6kohluod1kShluom2uSklyog3wSdljo44uS6lNoU5NStl2oylxHAxtWtkSbazvMdxjxGmtStxyR0DH1gevVdkNyNbGLVo1HVxvVtiuR36Sbtht2th2zekELjxjywhxz6hNMgoRywmvRdYjb4kuy3xuc4hunfYERt6uyBnvy74Dytotyt0xxfxvLd0uVtz3ysx2LtoNI61NxsyRbtxDRkFH3xxuxhNHJFkNzwVSasYxxtxH2v1xcgnvHd6Dz0Fux6xt2w0HH26xaBkN3okkx1xuLdxkx1muRdhka1kucdoky1quyd3kS1huyd3kI1huym3uIkhyyg3wIdhDy03uI6hNyU3NItsxRsFHbj2vL6aDx062yt0txQxvb6LDLjayn162btht2Vh1aSaSMexFblwtWta3RBBN2tzxyumtR1SEVkoHnt6uHvxRL0bHnt6txi9uWfxEKjxNx1ouy0mux61NRUnjHdhyztauVgkxRU6NbhaunknIIdiv2dxuxtxHWg3vydx2JdNx16INVeRRRthDzkkHLx0ucgxRxaZ1RZhNzteEWtxuxjJR2a53njhwzdzQy4xOyixDR3FO3i0Nn36Ooiljo3nOSilto3oOSilDo30OSilwot1SSjlRot2tS0luo63NHUxNWtkxbszHMjxvx6nDH0h2ztktbQzvL6xDbjwyW1a2RtJtL6lGyRbQLdoIHlxtVtw3RB6NRtxx2uwt31xEykhHztjubvxRx0xHHt7tz0Fuy1xNI1juI00uy64NnUnjIdxyRtCuMgdx2UxNxhwuMkiIyd2vLdbuxthHagovnd62ad5xy6RNKehRMtxDRkSH3xjuWg5Ryax1aZxNRtSEMt5uyjjRLah3RjYwRd6wy2mORjhDa2kOcjoNy2qOyj4Do1hOyj4No1hOyj4jo1hOyj4wothSyj4Rothty04uo6sNRUFNbt22Lva2xX6tytmSRahvzdktbSztLtxyb0wHWgavRdJDLNlOy6bFLYoPHtxuV3wSRt6tRtx22ewE3jxjywhxz6jNbgxRxwxvHd7NziFNy4xNIkjuI4ouy6mNyU1jxdxyLt0uVgzxyUxNLhouIk1IxdyvbdxuRtFH3gxvxdN2TdKxb63NaeIRxtxD2k1HcxnuHg6RzaF1xZxN2t0EHt6uajkR3ak3xjxwLdxQx11OHjhDa0kOcjoNy0qOyj3jS0hOyj3tS0hOyj3DS0hOyj3wSthSyj3RSthty03uS6sNRUFNbt22Lva2xX6tyt1SxaxvbdLtLSatnt6yb0hH2ghvadaNMlxubVwvWKaPRtBu23zSytltRtS2VeoEnj6jHwxxL6bNng6Rxw9vWdxNKixjx21ux32EHfmkItjuxBhvz7aDVtktRt6xbfavndnuIti32sx2xtxNW63NysxRTtjDKkZHyxNuxhhHzFkNLw0ScsxxxtZHRvhxzgevWdxDx0Jt2t5InvhxzgzSytxDxihkahkOchokyhqOy53kIhhOy43kIhhOy33kIhhOy23kIhhky63jI0h3yB3NItsORtFubv2vLdajxa6IyBxtRtDS1aevVdktyRbtLtoyH0xHVgivRd6tbOhu2UhPzFkSLtxuy3hSzthtMto2yemERjYjbwkxy6xNcghRnwYvRd6Dy00Nyf4ORimDIijtytxGRtCSM9dt26xjxxwHMtiNy62jLkbRxOhNahounv62aXYNKwOS2snxbtxIRwSw3dj2Wd5xy6xj1wxHRHSxMt5ty2xu2tkuLjxRRaY3Rj6wyd31x1xOVjntW1xOajnDS1nORjnNS1nOHjnDS0nOxjnNS0nOnjnwStnSRjnRStntK2huatnu3vevVdnRy1xxytxSRaDv1deDVPktytbyL0oHHgxvVdijRK61bUhw2ghHztkuL3xSythtzth2MeoEyjmjRwYxb6kNygxRcwhvndYtRj6uy1oEyf1uRi0jRtmuoBxvR7CDMtdt2txxxfwvMdiuyt23Lsb2xthNa6oNns6RatYDykNHMxHuzhxHRFSN3wjSWs5xytxH0vxxRgSvMd5Nyixux6xtLwxHx2mxoBxNRoFE330und6Eo3luSd0OS3luSd1OS3luSd2OS3luSd3OS3luSm4uSklySg5wHdxNWikub6zNMUxNxtmyo1x2RfDx1RetVtkSyabvLdoDHPxtVtiyR06Hbghv2dhjzOkuLUxGyFh1zthuM3oSytmtRtY2bekEyjxjcwhxn6YNRg6RywovydmNximuI5juyk1ExfxuL60NVUzjydxyLtouIg1xxUyNbhxuRkFI3dxvxdpu1tIH1gRvUdZ2xdxx261NcenRHt6DakWHxxxu2g0RHa61cZhNRtxOLixtxtnIovxxRgFS3t0Dnj6OohlOSi3OShlOSh4OShlOS55OShlOS4lOShlOS3mOShlkS6njH0x3WBkNbtzOMixtxtnHotxtR0DI1xexVskyytbuL5oIHOxNVtiPRt6ub5hS2fh3zOkNLtxyy1hGzOhOMgovy6mjRkYwbdktyxxHc2huneYIRs6tyt42yz0IRY2NHt3ORihNziauV2kERf6EbtaunBnvI7iD2txtxtxxWf3vydxuMtR3Us62KtONR6hNzskRLt0DckxHxxIunhhHzFeNWwxSxsxxRtYHRv6xyg0vxdxjVtnuWjxRaan3Sj1wHdnGS12ORjnNS12OHjnDS02OxjnNS02OnjnjS02OUjhta0nO3jewVtnSyjxRotxtR3Dt1teHVtkNydbyL6oDH0x2VtitRM6vb6hD2jhyz1k2LtxtyEhQzVhPMHoHyOmtRtY3bBkNytxxcuhtn1YERk6HytjuyvjRo0jHItxtR3CNM0du2jxuxfwEMtiuyB2vL7bDxthtatoxnf6vad5uytO30sL2TtxNR6SN3sjRWt5DykxHKxxuRhSHMF5NywxS3szxbt5HxvxxLgxvxd1NHihua6ktcwoHy2qxyB3Noohuy43uodhEy43uodhEy43uodhEy43uodhEy43uodsER4Fubm2uLkayxg6wydmNxixub6LNLUaNnt6HbwhS2fhHatauM5xIbOwNWta0RtBu25zSyfl3ROSNVto3n06FxJxuL6bvn66jxk9wWdxtKxxHx2muRemISsjtStj2IzoIxYxNLt0EVjzDykxuL2ouIk1txtyGbtx3R6FN3kxRxwN2UZLNVtSu1hkkx4xk2j1kchnOHk6Ez1FEx4xE250EH36ta1kI3hkIxex2LtxuxvmPyMxHRcFH3z0Pnd6yotlty53OS0lEy54ESjlNy35kSilEy5lOSjlEy1mkSelHyhnNHhxHWskxb6zNMUxHxfm2yOxHRvDI13exVtktykbuLioEH1xuVkiNR36kbihE25hOzjkEL1xkyehHzhhNMhoHysnxR6YNbUkHyfx0cuhRnOYHRv6Iy3jxItnty2lOH10kHihOz1aNV3kkRi6Eb5aOnjnEI1ik2exHxhxNWh3Hysxxz6VNaUYHVwNxxsh2z4kPLd0yctxtxiZuRihOz0eEWjxNx3Jk2i5En5hOzjzEy1xkSexHRhFN3h0Hns6xo65NoUmHS05RoEnRS15vodojSh5uo30kS05uog1kS45Eoi2EH5xuW1kEb1zEMtxSxe0SHshDzuktbtzHLvxPbuwxWfa2RdJHLRlNytbOLhoOH0xuV2wkRh6ORkxE21wE34xEy5hEz3jtb1xIxhxIHe72ztFuyvxPIMj3Iw1HyE1Iyf0HxNxNLt0uV3zkyjxOLjokIh1OxkyEb1xER4FE35xEx3Ot21kI1hVIKeY2xtxu2v1PcMnxHg6Rz4Fvxwxx2s0vHd6taikE3jkux4xELgxkx45ERihEa5kuc1oEy1qEyt3SIehSys3DIuhtyt4HSvhFye4RSjhxyf4xSthty34ES0suR4Fkb52SL3akxi6Ey50OxjxEb1LkLeaHnh6NbhhH2shxa6aNMUxyb1w2WuavRdBu2tzIyelRRcSHVdoPns6vxdxuLtbGnH6Ixg9HWaxQKsxRx01Hxf32HOmRo1jvIdmuxtxILg0HVazQysxRL0oHIf12xOyRb1xvRdFO35xuxvSHagkPUySRUvIPxjx22w11cfn2HO6NzhHOx6xN2f03HN63aXaH3vhIx3xxLkxHxgmvydxOR0Fu3v0Hng6PoylRoknHSglvodoOSkluov0HSgl0og10Sfl2oO2NS1luo53SHwxQWMkHbgzPMsxvxdmOyhxuRtDH1heEVjkRyvbHLZoyHax2VtiNRh6ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920}