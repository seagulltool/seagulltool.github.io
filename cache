{"Timestamp":1654680001,"Time":"2022-06-08T09:20:01","Flag":0,"Tips":"Version 6.0 is available in Official Website!","TipsDetail":"Version 6.0 is available in Official Website!\n\nGoogle Play will be a few days later!\n\nSeagull is back!!!","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":600,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api"],"Data":"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","Source":0,"PublishVersion":920}