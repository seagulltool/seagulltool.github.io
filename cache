{"Timestamp":1644849601,"Time":"2022-02-14T14:40:01","Flag":0,"Tips":"! Network is not stable !","TipsDetail":"#. 2-star(**) for Fast and Super, 3-star(***) only for Super\n\n#. Change mode before connect\n\n#. Use node with T for Twitter\n\nNetwork is not stable, which is out of Control...","Urgency":"","DownloadUrl":"https://seagulltool.web.app/download.html","LatestVersion":530,"Apis":["http://3.106.134.198:7100/api/main","https://seagullcache.blob.core.windows.net/node/cache","https://asia-east1-apiservice1027.cloudfunctions.net/api","http://155.138.142.134:7100/api/main","http://167.179.80.146:7100/api/main","http://52.47.162.66:7100/api/main","http://15.222.60.48:7100/api/main","http://54.255.201.165:7100/api/main"],"Data":"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RIthDokoHIxsuRgFRba21LZaNxt6uyj1txtxIbvLxLgaSnt6Db3hk20hOa2akM0xOb1wkW0aOR0Bk20zOyklkR0SOVjokn06kH6xjL0b3nB6Nxt9uWjxtKtxHxt0tx0mIoxjxys0yyt4ux5hIzOaNVtkPRt6ub5aSnfn3IOiN2txxxexIWO3Oyhxw06SjzkkwbdRtHxhHz2kuLe0IcsxtxtI2nzhIzYeNWtxubj1NV1huz5zuyjxuI6nNxUxjVdnyWtxuagoxSUoNRhouSkoIHdovSd0uRtoHSg0vHdo2Sd0xx6oNSe0R1thDaknH3xeuVgnRyax1IZnNxtxObtLuLjaRna63bjhw2dhQa2aOMkxDb1wOWkaNR1BO2kzjy1lORkStV1oOnk6DH1xOLkbwnt6Sxj9RWtxtK4xux61NRUnNIdjHyfmuy52IHOhNzta0VtkuR56Sbfa3nOnNItiS21xPxOxxWg3wy6xj3kZwKd5tyxSHH2huzekILs0tctx2xzIInYhNzteOWfxubf1uVjhDziztytxGIt1Sx9xtV6njWxxHatoNS61jRkoRSO1NHhouSv12xXoNSw1SnsoxSt1IRwowSd12Kdhxa6nj3weHVHnxytxtI01ExtxubjLRLaa3nj6wbdhw2khOakaDMkxObkwNWkaORkBj2kzOykmtRkSOVkoDnk6OHkxwLtbSnj6Rxt9tW0xEKtxuxvmvndnRy1jxIt3Sya2vxdxDLO0tVtzyy0xHLgovId1DxKyGbUxQRFFH3txux3NSTtKtTtK20ekExjxj2w1xc6nNHg6RawWvxdxN200uH36uckhERfxkLtxuxB4vx7hDatktctoxyfqvodouoth3oso2othDo6oNoshRotoDokhHoxouohhHoFoNowsSRsFxbt2HLvaxxg6vyd2Nxkxub6LtLwaHn26xbBhN2ohuajakMdxubjwkWdauRjBk2dzuyjmkRdSuVjoknd6uHjxkLmbunk6yxg9wWdxNKkxux6mNRUmNStjRyfnxygmwx6xDL002VtztyMxvL6oDIj1yx1y2btxtRFFw3CxFxfO2zNItTtJ3zBlNxtxx2u1tc1nEHk6HztFuxvxR200HHt6ta0kE3fkOxixNLkxux15EHthuaBkvc7owytq3oanFovhxotntojhOo3nOS2huo0nNS3hkoinES5hOojnES1skReFHbh2NLhaHxs6xy6mNxUxHbfL0LuaRnO6Rb1hv2dhDa1aOM5xEbjwuWgakR4BE2izEy5luR1SEV1oEnt6SxexSLsbDnu6txt9HWvxvKax2xvmRnjm2IwjwSdjRS1xxRtCHMvdv2Ux2xww2MviRyj22LwbwxdhtaioEnh6Ez1YE1gRk04hEzixER5Su31jEW15EytxSaexSRsSDMu5tytjHLvhFRyYHRz6RyQ0Rx1xvVdnDW5xEakoOShouRgokS4oEHioES50uR1oES10EHtoSSe0SxsoDSu0t1thHavnP3ge2VdnHyRxNStxOR3Dk1jeOVhkkyhbOLkoEH1xEV4iER56Eb3ht21hIzhkILex2ythuzvhPMMo3ywnxRgYPbdkyytxNcdhyn6YNRU6Hy0oHydm2xjmxSfjxIt0tx1xkL10uVjzuy0xNL3okIi1Ex5yObjxER1Fk3exHxhON0h1HasVxK6kNxUxH2w13cdnSHQ6IafWHxNxN2t0EH36uc1hOR5xkLhxOxkmEy1xER4FE350En36to10IohlISe02otmuSv0PoMnHSg0vowoxSs0vod0jSh0Ooh1OH5xEW+kkb4zEMixEx5muy1xER1DE1teSVekSysbDLuotHtxHV0iHRg62bMhN24huz0kHLax0yuhRzOhIMYoNy4nuRBYvb0k3ywxHcFhHngYPRu6xyf02yd4HRRmNIhjuIt3IxgxHLa0QVszRy0xHLfo2IO1Rx1yvbdxOR5Fu3vxHxgOP1yhRJvCP1jY2xwx12f12cOnNHh6Oa6INxfx32N03HX6HcvhIR3xxLkxHxgmvSdxOR0Fu3v0Hng6Poy0RokmHSg0vodnOSk0uovoHSg00og00Sf02oO1NS10uo52SHwxQWMkHbgzPMsxvxdmOShxuRtDH1heEVjkRyvbHLZoyHax2VtiNR16ubthS2NhPzOkNLhxuy6hjzhh0MiovydnOR1YubtkSyNxvcOsjFKOPO","Source":0,"PublishVersion":920} 